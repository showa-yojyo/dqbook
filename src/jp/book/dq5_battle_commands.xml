<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % replacement SYSTEM "replacement.xml">
  %replacement;
]>

<section id="dq5.battle.commands"><?dbhtml filename="dq5_battle_commands.html" ?>
<title>戦闘コマンド</title>
<para>
この節では戦闘コマンドについて述べる。
戦闘コマンドとは、戦闘中の一ターン内において、敵や味方それぞれに対する命令をカプセル化した概念だと定義する。
プログラムコードの観点では、戦闘中に配列 <varname>$1073</varname> などに格納される 1 バイトの値を ID とする何らかの配列要素を戦闘コマンドと表現していると解釈する。
</para>
<para>
本節では最初に実際のプログラムコードに沿う形で戦闘コマンドの分類を行う。
戦闘コマンドと関連性のあるデータについても併せて見ていく。
それから、戦闘コマンド分類のそれぞれについて、付随するモデルの物理的構造やコードの挙動を検討していく。
最後に、コードを分析して得た戦闘コマンドデータを CSV 形式のテキストファイルで提供する。
</para>

<section id="dq5.battle.commands.classification">
<title>戦闘コマンドを分類する</title>
<para>
戦闘コマンドを理解するには、配列 <varname>$1037</varname> と配列 <varname>$1073</varname> について理解する必要がある。
まずはこれらの配列について説明する。
</para>
<para>
配列 <varname>$1037</varname> は次の構造の 1 バイト型データを要素とするものだ：
</para>
<table id="table.dq5.battle.commands.1037" class="lighttable">
  <caption>構造体 $1037: 戦闘コマンド情報</caption>
  <thead>
    <tr><th>桁</th><th>意味</th></tr>
  </thead>
  <tbody>
    <tr><td><literal>#$03</literal></td><td>戦闘コマンド種別</td></tr>
    <tr><td><literal>#$7C</literal></td><td>戦闘コマンドの相手のインデックス</td></tr>
    <tr><td><literal>#$80</literal></td><td>戦闘コマンドの相手が敵側かどうか</td></tr>
  </tbody>
</table>
<para>
本節では、戦闘コマンド情報構造体の下位 2 ビットの値で戦闘コマンドを分類する。
戦闘処理のコードを解析すると、次のように分類するのが妥当なように思える：
</para>
<table id="table.dq5.battle.commands.kind" class="lighttable">
  <caption>戦闘コマンド種別</caption>
  <thead>
    <tr><th>値</th><th>意味</th></tr>
  </thead>
  <tbody>
    <tr><td>0</td><td>防御系</td></tr>
    <tr><td>1</td><td>一般</td></tr>
    <tr><td>2</td><td>装備変更</td></tr>
    <tr><td>3</td><td>道具使用</td></tr>
  </tbody>
</table>
<para>
さらに、この戦闘コマンド情報配列と一対一対応する配列がアドレス <varname>$1073</varname> にあり、
こちらには戦闘コマンドを示す 1 バイトの値を格納する。
戦闘コマンド情報配列と戦闘コマンド配列は両方とも、プレイヤー側馬車外のキャラクター群と
敵側パーティーのキャラクター群の関連情報を保持するのに十分な長さがある。
</para>
<para>
例えば、自陣側の馬車外メンバーが主人公、スラリンの 2 名で、敵陣がメタルスライム 3 匹 だとしよう。
このときのキャラクター、コマンド情報のアドレス、そしてコマンドのアドレスの対応関係は次のようになる：
</para>
<simplelist type="vert" columns="3">
  <member><varname>主人公</varname></member>
  <member><varname>スラリン</varname></member>
  <member><varname>メタルスライムＡ</varname></member>
  <member><varname>メタルスライムＢ</varname></member>
  <member><varname>メタルスライムＣ</varname></member>

  <member><varname>$1037</varname></member>
  <member><varname>$1038</varname></member>
  <member><varname>$1039</varname></member>
  <member><varname>$103A</varname></member>
  <member><varname>$103B</varname></member>

  <member><varname>$1073</varname></member>
  <member><varname>$1074</varname></member>
  <member><varname>$1075</varname></member>
  <member><varname>$1076</varname></member>
  <member><varname>$1077</varname></member>
</simplelist>
<para>
実は本節での配列の説明は、戦闘コマンド自身を理解し易くするためにかなり簡略化してある。
配列の有効性やコマンド連続実行時の挙動等、言及しなかった事実があることを断っておく。
</para>
</section> <!-- dq5.battle.commands.classification -->

<section id="dq5.battle.commands.guard">
<title>防御系のコマンド</title>
<para>
種別が 0 の戦闘コマンドは、一般コマンドの意味で防御系のコマンドをとることが必要のようだ：
</para>
<programlisting><![CDATA[
20/8862:    20809F      JSR $9F80           ; $1073,X に戦闘コマンドをセット
20/8865:    C900        CMP #$00
20/8867:    F039        BEQ $88A2
20/8869:    C971        CMP #$71            ; みをまもる１
20/886B:    F02F        BEQ $889C
20/886D:    C972        CMP #$72            ; みをまもる２
20/886F:    F02B        BEQ $889C
20/8871:    C9AC        CMP #$AC            ; 防御中に同種の仲間が登場
20/8873:    F027        BEQ $889C

20/889C:    A900        LDA #$00            ; 戦闘コマンド情報構造体
20/889E:    206B9F      JSR $9F6B           ; $1037,X に戦闘コマンド情報をセット
20/88A1:    60          RTS
]]></programlisting>
</section> <!-- dq5.battle.commands.guard -->

<section id="dq5.battle.commands.general">
<title>一般のコマンド</title>
<para>
種別が 1 の戦闘コマンドには次に挙げる性質、属性がある：
</para>
<itemizedlist>
  <listitem>
    <para>名前</para>
  </listitem>
  <listitem>
    <para>数値の変化量を評価するコード</para>
  </listitem>
  <listitem>
    <para>実行時に表示するメッセージ</para>
  </listitem>
  <listitem>
    <para>必要 MP</para>
  </listitem>
  <listitem>
    <para>有効範囲</para>
  </listitem>
  <listitem>
    <para>目標が敵側に作用するものかどうかのフラグ</para>
  </listitem>
  <listitem>
    <para>実行コード</para>
  </listitem>
</itemizedlist>

<section id="dq5.battle.commands.general.name">
<title>名前</title>
<para>
一般の戦闘コマンドの大半は、ウィンドウのテキスト表示処理に利用できる名前文字列と対応付けられている。
実体はアドレス <varname>$228000</varname> にある文字列だが、
<xref linkend="dq5.accessor.specification.functions"/> のキー <literal>#$2B</literal> の参照機能を引き起こす
BRK 命令を実行することで、戦闘コマンドの名前にアクセスする。
</para>
</section> <!-- dq5.battle.commands.general.name -->

<section id="dq5.battle.commands.general.evaluate">
<title>数値の変化量を評価するコード</title>
<para>
何らかのパラメーターを増加または減少するコマンドは、その変化量を評価するためのサブルーチンを必要とする。
そのサブルーチンのアドレスはジャンプテーブル <varname>$20B7F9</varname> で定義されていて、
対応するサブルーチンアドレスがあるテーブル列の ID は、戦闘コマンドのそれと一致している。
</para>
<para>
変化評価を必要としないような戦闘コマンドには、空サブルーチンのアドレスが割り当てられている。
</para>
</section> <!-- dq5.battle.commands.general.evaluate -->

<section id="dq5.battle.commands.general.message">
<title>実行時に表示するメッセージ</title>
<para>
戦闘コマンドの実行直後には、画面中央下のメッセージウィンドウに臨場感豊かな文言が出力される。
各戦闘コマンドはそのような戦闘メッセージの ID を一つ有する。
このメッセージ ID は配列 <varname>$268565</varname> の要素として定義されていて、
配列のインデックスとコマンドの ID が対応している。
</para>
</section> <!-- dq5.battle.commands.general.message -->

<section id="dq5.battle.commands.general.mp">
<title>必要 MP</title>
<para>
戦闘コマンドを実行するために、実行者の MP を消費する必要があるものが多い。
この情報が配列 <varname>$268765</varname> で定義されている。
これは 1 バイトの値を要素とする配列なのだが、MP 情報は <literal>#$1F</literal> 部分のビットで定義されている。
そして、配列のインデックスはコマンドの ID と対応している。
</para>
<para>
さらに、特殊な MP 消費をするコマンドのために、一部はプログラムで消費量を上書きする：
</para>
<programlisting><![CDATA[
26/83A1:    BF658726    LDA $268765,X
26/83A5:    291F        AND #$1F            ; 必要 MP
26/83A7:    C91F        CMP #$1F
26/83A9:    F01D        BEQ $83C8           if(MP != 0x1F){
26/83AB:    C91E        CMP #$1E
26/83AD:    D004        BNE $83B3               if(MP == 0x1E){
26/83AF:    A924        LDA #$24                    MP = 36d
26/83B1:    8006        BRA $83B9               }
26/83B3:    C91D        CMP #$1D
26/83B5:    D002        BNE $83B9               else if(AL == 0x1D){
26/83B7:    A9FF        LDA #$FF                    MP = 255d
                                                }
26/83B9:    2C1610      BIT $1016
26/83BC:    C210        REP #$10
26/83BE:    5004        BVC $83C4               ; このあたりの処理は
26/83C0:    0A          ASL A                   ; パルプンテのはやぶさ効果を
26/83C1:    9001        BCC $83C4               ; 考慮するものゆえ
26/83C3:    6A          ROR A                   ; 今は議論しない
26/83C4:    FA          PLX
                                            }
26/83C8:    A900        LDA #$00            ; 消費なし
]]></programlisting>
<para>
このコードの解析によると、マジックナンバーがかなり多いことがわかる。
全ビットがオン、つまり MP が 31 ならばそれは呪文コマンドではないという取り扱いになるようだ。
ベホマズンに対応する消費 MP <literal>#$1E</literal> は 36 ポイントに変更する。
さらにメガザルに対応する消費 MP <literal>#$1D</literal> は 255 ポイントに変更する。
ここには表れていないが、値 <literal>#$FF</literal> もまた「現在の MP の残り全て」を表現するマジックナンバーだろう。
</para>
</section> <!-- dq5.battle.commands.general.mp -->

<section id="dq5.battle.commands.general.scope">
<title>有効範囲</title>
<para>
戦闘コマンドの有効範囲とは、次の表に示す区分のことだ。
</para>
<table id="table.dq5.battle.commands.scope" class="lighttable">
  <caption>戦闘コマンド有効範囲</caption>
  <thead>
    <tr><th>値</th><th>意味</th></tr>
  </thead>
  <tbody>
    <tr><td>0</td><td>その他</td></tr>
    <tr><td>1</td><td>単体</td></tr>
    <tr><td>2</td><td>グループ</td></tr>
    <tr><td>3</td><td>全体</td></tr>
  </tbody>
</table>
<para>
この情報も配列 <varname>$268765</varname> で定義されている。
各バイトの <literal>#$60</literal> 部分のビットを占める。
</para>
</section> <!-- dq5.battle.commands.general.scope -->

<section id="dq5.battle.commands.general.hostile">
<title>目標が敵側に作用するものかどうかのフラグ</title>
<para>
例えば「メラゾーマ」は敵の誰かに作用するコマンドであるが、「ザオラル」はそうではない。
この情報も配列 <varname>$268765</varname> で定義されている。
各バイトの <literal>#$80</literal> 部分のビットを占める。
</para>
</section> <!-- dq5.battle.commands.general.hostile -->

<section id="dq5.battle.commands.general.execute">
<title>実行コード</title>
<para>
戦闘コマンドを実行するサブルーチンのアドレスは配列 <varname>$268865</varname> で定義されている。
配列のインデックスはコマンドの ID と対応している。
</para>
<para>
ちなみに、この配列は論理的にはジャンプテーブルであるはずなのだが、サブルーチンの呼び出し方が変則的だ。
所定の変数にアドレス値をロードし、直接 JSR する。
</para>
</section> <!-- dq5.battle.commands.general.execute -->
</section> <!-- dq5.battle.commands.general -->

<section id="dq5.battle.commands.equip">
<title>装備を変更するコマンド</title>
<para>
種別が 2 の戦闘コマンドとは、プレイヤーの通常の入力操作において次の条件を満たす、味方側キャラクター限定のものをいう：
</para>
<itemizedlist>
  <listitem><para>指定キャラクターのコマンド選択ウィンドウで「どうぐ」を選択した</para></listitem>
  <listitem><para>どうぐウィンドウで選択した物のアイテム種別が武器である</para></listitem>
  <listitem><para>指定キャラクターがその武器を装備することが可能である</para></listitem>
  <listitem><para>「つかう・そうび」ウィンドウで「そうび」を選択した</para></listitem>
</itemizedlist>
<para>
言い換えると、キャラクターが武器の装備を変更して、さらに直接攻撃をするという流れを生じるコマンドを意味する。
この定義から、武器でないアイテムが関わるどのようなコマンドも、ここで議論するものには該当しないことを意味する。
例えば「ほしふるうでわ」を選択すると、そのターンで実際にそれを装備するが、これは種別 2 のコマンドではない。
後述する種別 3 のコマンドに分類される。
</para>
<para>
実際には、戦闘コマンド情報を評価するタイミングで次のような操作を施す：
</para>
<orderedlist>
  <listitem>
    <para>
      現在装備している武器があれば、それを外す。
      これに伴って、対象キャラクターの攻撃力と守備力を再評価する。
    </para>
  </listitem>
  <listitem>
    <para>
      選択したアイテムを装備する。
      やはり対象キャラクターの攻撃力と守備力を再評価する。
    </para>
  </listitem>
  <listitem>
    <para>
      戦闘コマンドとコマンド種別を「こうげき」コマンドと一般コマンドにそれぞれ置き換える。
      この際、装備を変更したことを示すメッセージを表示する（下記コード片参照）。
    </para>
  </listitem>
</orderedlist>
<programlisting><![CDATA[
20/8583:    A973        LDA #$73            ; 「こうげき」
20/8585:    8DF710      STA $10F7           ; 戦闘コマンド ID
20/8588:    20809F      JSR $9F80           ; コマンドキャラクターの戦闘コマンド ID を設定
20/858B:    20419F      JSR $9F41           ; コマンドキャラクターの戦闘コマンド情報を参照
20/858E:    29FC        AND #$FC
20/8590:    0901        ORA #$01            ; 種別 1: 一般コマンド
20/8592:    206B9F      JSR $9F6B           ; コマンドキャラクターの戦闘コマンド情報を設定
20/8595:    20DF9E      JSR $9EDF           ; コマンドキャラクターを参照
20/8598:    85F5        STA $F5
20/859A:    85F7        STA $F7
20/859C:    00A1        BRK #$A1            ; message #$0028: [F7]は ぶきを [F5]にもちかえた！
20/859E:    28
20/859F:    20D69D      JSR $9DD6           ; 待ち
20/85A2:    ADF710      LDA $10F7           ; 戦闘コマンド ID
20/85A5:    82A6FE      BRL $844E           ; （戦闘コマンド ID による分岐）
]]></programlisting>
<para>
なお、戦闘コマンド ID を収める変数には、
そこに「こうげき」を示す値 <literal>#$73</literal> が入るまでは新しく装備する武器のアイテム ID が収められていた。
</para>
</section> <!-- dq5.battle.commands.equip -->

<section id="dq5.battle.commands.use">
<title>道具を使用するコマンド</title>
<para>
種別 3 の戦闘コマンドとは、味方側キャラクターに限定された、道具に関する戦闘コマンドを意味する。
先に述べたように、実行時のメッセージに「そうびした！」とあっても、実質的にはこちらの種別になるコマンドが普通にある。
</para>
<para>
種別が 3 の戦闘コマンドには次に挙げる性質、属性がある：
</para>
<itemizedlist>
  <listitem>
    <para>アイテム</para>
  </listitem>
  <listitem>
    <para>実行コード</para>
  </listitem>
</itemizedlist>

<section id="dq5.battle.commands.use.item">
<title>アイテム</title>
<para>
戦闘コマンド ID はアイテム ID でもあるので、処理コードはアイテムの属性をすべて参照することが可能だ。
例えば、コマンド処理中にアイテムが消耗品であるかどうかを知る必要がある。
アイテムについては <xref linkend="dq5.items"/> で議論する。
</para>
</section> <!-- dq5.battle.commands.use.item -->

<section id="dq5.battle.commands.use.execute">
<title>実行コード</title>
<para>
実行コードはサブルーチンで実装されている。ジャンプテーブルはアドレス <varname>$20C162</varname> にあるのだが、
このテーブルの行番号は戦闘コマンド ID すなわちアイテム ID とは一致していない。
アイテム ID から行番号への対応表がアドレス <varname>$27819A</varname> にあり、これを用いて変換する。
たいていのアイテムは「しかし なにも おこらなかった」というメッセージ表示しか引き起こさないので、
それ以外の戦闘コマンドに対してしか意味のある実行コードを用意しなくて済むようにこのような構造になっている。
</para>
<para>
使用コマンドが何らかの固有処理を有する場合には、その処理コードを特定した直後に、
そのアイテムを消費するかどうかを判定し、消耗品であれば実際にキャラクターの持ち物袋からそれを一つだけ削除する。
その後に固有処理をするサブルーチンを呼び出す。
</para>
</section> <!-- dq5.battle.commands.use.execute -->
</section> <!-- dq5.battle.commands.use -->

<section id="dq5.battle.commands.data">
<title>データ</title>
<para>
戦闘コマンドデータを CSV で表現したファイルを <xref linkend="appendix.b"/> から参照できる。
本節で述べた複数の配列とテーブルを水平に結合したり、コメント欄を付加してあったりするので利用者は注意して欲しい。
</para>
</section> <!-- dq5.battle.commands.data -->
</section> <!-- dq5.battle.commands -->
