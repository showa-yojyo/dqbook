<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % replacement SYSTEM "replacement.xml">
  %replacement;
]>

<section id="dq3.medal"><?dbhtml filename="dq3_medal.html" ?>
<title>メダルおじさん解析</title>
<indexterm id="term.dq3.medal"><primary>ちいさなメダル</primary><secondary>DQ3</secondary></indexterm>
<para>
	メダルおじさんに「はなす」ときの処理を解析する。
	おじさんはどのようにして、勇者一行がこれまでに渡してきたメダル枚数を記憶しているのか、
	パーティーメンバーが持っている「ちいさなメダル」をどのような優先順位で受け取るのか、
	そして、交換する品物をどのように決定しているのかを見ていこう。
</para>

<section id="dq3.medal.hack">
<title>解析</title>
<para>
	<link linkend="dq3.medal.hack.C3F076">サブルーチン <varname>$C3F076</varname></link> は
	現在のメダル取得状態に応じたおじさんの台詞を表示したり、
	パーティーから「ちいさなメダル」を受け取ったり、
	その代わりに褒美を受け渡したりする処理を行う。
	このサブルーチンから枝葉の処理を追っていけば、おじさん処理は全て把握できることになる。
</para>
<para>
	メダルおじさん周りの台詞表示は、すべてサブルーチン <varname>$C1A92E</varname> 呼び出しで実現している。
	このサブルーチンは、呼び出しコード直後に <literal>2</literal> バイトの定数を埋め込むことで、
	その定数を<link linkend="dq3.text.travel">メッセージ ID</link> として解釈する。
	これにより、逆アセンブルコードの解読を安定的に進めることができる。
</para>

<section id="dq3.medal.hack.C3F076">
<title>メダルおじさん共通処理</title>
<para>
	サブルーチン <varname>$C3F076</varname> は、メダルおじさんに「はなす」とすぐに始まる処理だ。
	以下のように実装している。
</para>
<itemizedlist>
	<listitem>
		<para>
			汎用サブルーチン <varname>$C9029E</varname> を用いて、メダルおじさんに譲渡済みのメダル枚数を取得する。
			<varname>$7E3538</varname> の <literal>#$3FC0</literal> 部分に枚数がセットされている。
			これを <varname>$2BB2</varname> にロードする。
		</para>
	</listitem>
	<listitem>
		<para>
			<code>X = #$000C - 1</code> をセットし、
			<link linkend="dq3.medal.hack.C3F239">サブルーチン <varname>$C3F239</varname></link> を呼び出して、
			その枚数を <varname>$2BBE</varname> にセットする。
			すなわち、最後の褒美 ID に相当する枚数を調べる。
		</para>
	</listitem>
	<listitem>
		<para>
			<link linkend="dq3.medal.hack.C3F1BD">サブルーチン <varname>$C3F1BD</varname></link> を呼び出して、
			その枚数、すなわちパーティーが持参したメダルの枚数を <varname>$2BB4</varname> にセットする。
		</para>
	</listitem>
	<listitem>
		<para>
			所持枚数と譲渡済枚数の和が <literal>256</literal> 以上であれば、<literal>255</literal> に丸める。
			この値を <varname>A</varname> レジスタにセットする。
		</para>
	</listitem>
	<listitem>
		<para>
			汎用サブルーチン <varname>$C902E9</varname> を用いて、メダルおじさんに譲渡済みのメダル枚数を更新する。
			<varname>$7E3538</varname> の <literal>#$3FC0</literal> 部分に <varname>A</varname> レジスタの値をセットする。
		</para>
	</listitem>
	<listitem>
		<para>
			まだ与えていない褒美を調べるために<link linkend="dq3.medal.hack.C3F199">サブルーチン <varname>$C3F199</varname></link> を呼び出し、
			結果を調べる。
		</para>
		<itemizedlist>
			<listitem>
				<para>
					もし与えていない褒美があれば【あいさつ】へ制御を移す。
				</para>
			</listitem>
			<listitem>
				<para>
					すべての褒美を与えていれば【おめでとう】へ進む。
				</para>
			</listitem>
		</itemizedlist>
	</listitem>
	<listitem>
		<para>【おめでとう】</para>
		<itemizedlist>
			<listitem>
				<para>
					メッセージ (ID <literal>#$0D6D</literal>) 「よくぞ○○枚も集めてくれた」を言わせる。
					この台詞に出てくる枚数は <varname>$2BB6</varname> の値と同じだ。
				</para>
			</listitem>
			<listitem>
				<para>
					制御を【終了】へ移す。
				</para>
			</listitem>
		</itemizedlist>
	</listitem>
	<listitem>
		<para>【あいさつ】</para>
		<itemizedlist>
			<listitem>
				<para>
					メッセージ (ID <literal>#$0D64</literal>) 「よくぞ来た」を言わせる。
				</para>
			</listitem>
			<listitem>
				<para>
					譲渡済枚数 <varname>$2BB2</varname> の値をテストする。
				</para>
				<itemizedlist>
					<listitem>
						<para>
							<code>$2BB2 == 0</code> ならば
							<itemizedlist>
								<listitem>
									<para>
										メッセージ (ID <literal>#$0D65</literal>) 「メダルを見つけた者には褒美をとらせよう」を言わせる。
									</para>
								</listitem>
								<listitem>
									<para>
										<varname>$2BB4</varname> をテストする。
										<code>$2BB4 == 0</code> ならば【終了】へ制御を移す。
										そうでなければメッセージ (ID <literal>#$0D66</literal>) 「なんとメダルを持ってきたか」を言わせた後に、
										【ステータス】へ制御を移す。
									</para>
								</listitem>
							</itemizedlist>
						</para>
					</listitem>
					<listitem>
						<para>
							そうでなければ <varname>$2BB4</varname> の値をテストする。
							<code>$2BB4 == 0</code> ならば【枚数告知】へ制御を移す。
							そうでなければメッセージ (ID <literal>#$0D68</literal>) 「ほほうメダルを持ってきたか」を言わせた後に、
							【ステータス】へ制御を移す。
						</para>
					</listitem>
				</itemizedlist>
			</listitem>
		</itemizedlist>
	</listitem>
	<listitem>
		<para>【ステータス】</para>
		<itemizedlist>
			<listitem>
				<para>
					メッセージ (ID <literal>#$0D67</literal>) 「これまでに持ってきたメダルは全部で○○枚じゃな」を言わせる。
					この台詞は <varname>$2BB6</varname> に格納した値と同じだ。
					台詞を表示した直後に、更新された譲渡済枚数と、次回褒美枚数を比較する。
				</para>
				<itemizedlist>
					<listitem>
						<para>
							譲渡済 &lt; 次回褒美枚数 ⇒【次回褒美告知】へ制御を移す。
						</para>
					</listitem>
					<listitem>
						<para>
							そうでなければ【褒美うけわたし】へ制御を進める。
						</para>
					</listitem>
				</itemizedlist>
			</listitem>
		</itemizedlist>
	</listitem>
	<listitem>
		<para>【褒美うけわたし】</para>
		<itemizedlist>
			<listitem>
				<para>最初が詳細不明</para>
			</listitem>
			<listitem>
				<para>
					メッセージ (ID <literal>#$0D69</literal>)「メダルを○○枚集めたので褒美をやろう」を言わせる。
					この台詞の○○部分には <varname>$2BBA</varname> の値と同じものが用いられる。
				</para>
			</listitem>
			<listitem>
				<para>
					メッセージ (ID <literal>#$0D6A</literal>)「～は○○を受け取った」を表示する。
					○○部分には <varname>$2BBC</varname> を用いて、褒美のアイテム名が表示される。
				</para>
			</listitem>
			<listitem>
				<para>
					<code>X = $2BB8 + 1</code> として、次回褒美 ID の値をチェックする。
				</para>
				<itemizedlist>
					<listitem>
						<para>
							<code>X &gt; #$000C</code> であれば、制御を【おめでとう】に移す。
						</para>
					</listitem>
					<listitem>
						<para>
							そうでなければ、<varname>$2BBC</varname>, <varname>$2BBA</varname>, <varname>$2BB8</varname> をこの順で更新する。
							それぞれサブルーチン <varname>$C3F21E</varname> 呼び出し、サブルーチン <varname>$C3F239</varname> 呼び出し、
							<varname>X</varname> レジスタの値を利用する。
						</para>
						<itemizedlist>
							<listitem>
								<para>
									<code>$2BB6 &gt; $2BBA</code> ⇒【褒美うけわたし】先頭へ制御を戻す。
								</para>
							</listitem>
							<listitem>
								<para>
									そうでなければ【枚数告知】へ進む。
								</para>
							</listitem>
						</itemizedlist>
					</listitem>
				</itemizedlist>
			</listitem>
		</itemizedlist>
	</listitem>
	<listitem>
		<para>【枚数告知】</para>
		<itemizedlist>
			<listitem>
				<para>
					メッセージ (ID <literal>#$0D6B</literal>)「現在○○枚のメダルを預かっておる」を言わせる。
					この台詞では <varname>$2BB6</varname> に格納されている値である、更新された譲渡済枚数を知らせる。
				</para>
			</listitem>
		</itemizedlist>
	</listitem>
	<listitem>
		<para>【次回褒美告知】</para>
		<itemizedlist>
			<listitem>
				<para>
					メッセージ (ID <literal>#$0D6C</literal>)「○○枚に なったときは ××を あたえよう」を言わせる。
					この台詞は <varname>$2BBA</varname> と <varname>$2BBC</varname> にそれぞれ格納されている、
					○○に相当する値と××に相当するアイテムのアイテム構造体 ID と同じだ。
				</para>
			</listitem>
		</itemizedlist>
	</listitem>
	<listitem>
		<para>【終了】</para>
		<para>サブルーチン呼び出し元に制御を戻す。</para>
	</listitem>
</itemizedlist>
</section> <!-- dq3.medal.hack.C3F076 -->

<section id="dq3.medal.hack.C3F199">
<title>次の褒美を調べるサブルーチン</title>
<para>
	サブルーチン <varname>$C3F199</varname> は、メダルおじさんに譲渡済みのメダル枚数を
	<varname>A</varname> レジスタにセットしてから呼び出すものであり、
	次の褒美に対応するメダル必要累積枚数と、褒美アイテムのアイテム構造体 ID を
	<varname>$2BBA</varname>, <varname>$2BBC</varname> にそれぞれセットする。
</para>
<itemizedlist>
	<listitem>
		<para>
			<code>$78 = 譲渡済みメダル枚数 + 1</code> とする。
		</para>
	</listitem>
	<listitem>
		<para>
			<link linkend="dq3.medal.hack.C3F239">サブルーチン <varname>$C3F239</varname></link>を順次呼び出し、
			<varname>$78</varname> と、褒美構造体各データが定める必要累積枚数と比較していく。
			構造体各データは、累積枚数フィールドの値の小さい順に配列されている。
		</para>
		<itemizedlist>
			<listitem>
				<para>
					必要累積枚数が <varname>$78</varname> 以上になる褒美がない場合、
					<varname>Carry</varname> フラグがセットされた状態で、サブルーチン呼び出し元に制御を戻す。
				</para>
			</listitem>
			<listitem>
				<para>
					必要累積枚数が <varname>$78</varname> 以上になる褒美が見つかった場合、同時に
					<varname>X</varname> レジスタに褒美構造体 ID がセットされることになる。
					これにより、<link linkend="dq3.medal.hack.C3F21E">サブルーチン <varname>$C3F21E</varname></link>を呼び出して
					褒美となるアイテムのアイテム構造体 ID をも取得する。
				</para>
			</listitem>
		</itemizedlist>
		<itemizedlist>
			<listitem>
				<para>
					次の褒美に対応するメダル必要累積枚数と、褒美アイテムのアイテム構造体 ID を
					<varname>$2BBA</varname>, <varname>$2BBC</varname> にそれぞれセットする。
				</para>
			</listitem>
			<listitem>
				<para>
					<varname>Carry</varname> フラグをリセットしてから、サブルーチン呼び出し元に制御を戻す。
				</para>
			</listitem>
		</itemizedlist>
	</listitem>
</itemizedlist>
</section> <!-- dq3.medal.hack.C3F199 -->


<section id="dq3.medal.hack.C3F1BD">
<title>持参したメダル枚数を調べる＆回収するサブルーチン</title>
<para>
	調査中。事実関係と予想を交えて記すと以下のようになる。
</para>
<itemizedlist>
	<listitem>
		<para>
			パーティ全員の持ち物とふくろから、この順にちいさなメダルを削除していく。
		</para>
		<para>
			ただしすべてのメダルを回収するのではなく、
			回収カウンターが <varname>$2BBE</varname> 以上になったら、回収処理をストップする。
			<varname>$2BBE</varname> は<link linkend="dq3.medal.hack.C3F076">共通処理サブルーチン</link>でセット済みであり、
			この値は最後の褒美を得るのに必要なメダル累積枚数だ。
		</para>
	</listitem>
	<listitem>
		<para>
			制御を呼び出し元に戻す前に、回収枚数を <varname>A</varname> レジスタにセットする。
		</para>
	</listitem>
</itemizedlist>
<para>
	検証していないが、例えば初めてメダルおじさんと会うときに、
	一気にちいさなメダルを <literal>102</literal> 枚持参したとする。
	この解析結果の予想が正しければ、
	<literal>2</literal> 枚は回収されずに、パーティの持ち物リストに残るわけだ。
</para>
</section> <!-- dq3.medal.hack.C3F1BD -->

<section id="dq3.medal.hack.C3F21E">
<title>褒美 ID に対してアイテム ID を取得するサブルーチン</title>
<para>
	サブルーチン <varname>$C3F21E</varname> は、褒美構造体 <varname>$C31350</varname> にアクセスすることにより、
	褒美 ID に対応する褒美のアイテム ID を取得する。
</para>
<itemizedlist>
	<listitem>
		<para>
			サブルーチン呼び出し直後の <varname>X</varname> レジスタが褒美 ID を示している。
			構造体のサイズが <literal>2</literal> であるので、<code>$C31350 + X * 2</code> を計算するため、
			汎用乗算サブルーチン <varname>$C01098</varname> を利用する
			<footnote id="ftn.dq3.medal.C3F21E">
				<para>数値を二倍するだけなのに、乗算サブルーチンを呼びだす方法をとるのは珍しい。
				<code>ASL</code> 命令を使うだけで間に合いそうなものだが。
				</para>
			</footnote>。
		</para>
	</listitem>
	<listitem>
		<para>
			褒美構造体の <literal>1</literal> バイト目からの <literal>1</literal> バイトが、褒美アイテムの ID だ。
			この値を <varname>A</varname> レジスタにセットして、制御を呼び出し元に戻す。
		</para>
	</listitem>
</itemizedlist>
</section> <!-- dq3.medal.hack.C3F21E -->

<section id="dq3.medal.hack.C3F239">
<title>褒美 ID に対して必要枚数を取得するサブルーチン</title>
<para>
	サブルーチン <varname>$C3F239</varname> は、褒美構造体 <varname>$C31350</varname> にアクセスすることにより、
	褒美 ID に対応するちいさなメダルの必要収集枚数を取得する。
</para>
<itemizedlist>
	<listitem>
		<para>
			<link linkend="dq3.medal.hack.C3F21E">前述のサブルーチン</link>と同様にして、
			<code>$C31350 + X * 2</code> を計算する。
		</para>
	</listitem>
	<listitem>
		<para>
			褒美構造体の <literal>0</literal> バイト目からの <literal>1</literal> バイトが、褒美を得るのに必要なメダルの枚数だ。
			この値を <varname>A</varname> レジスタにセットして、制御を呼び出し元に戻す。
		</para>
	</listitem>
</itemizedlist>
</section> <!-- dq3.medal.hack.C3F239 -->

<section id="dq3.medal.hack.C31350">
<title>褒美構造体</title>
<para>
	<varname>$C31350</varname> に <literal>2</literal> バイトサイズの構造体データが <literal>#$0C</literal> 個配列されている。
	これが、メダルおじさんの褒美リストだ。
	構造体のメモリレイアウトは以下の通り。
</para>
<table id="table.dq3.C31350" class="memorylayout">
	<caption>$C31350 褒美構造体</caption>
	<colgroup>
		<col span="1" width="12%"/>
		<col span="7" width="11%"/>
	</colgroup>
	<thead>
		<tr><th>Byte:Bit</th>
			<th>80</th>
			<th>40</th>
			<th>20</th>
			<th>10</th>
			<th>08</th>
			<th>04</th>
			<th>02</th>
			<th>01</th>
		</tr>
	</thead>
	<tbody>
		<tr><th>00</th>
			<td colspan="8">必要枚数</td>
		</tr>
		<tr><th>01</th>
			<td colspan="8">アイテム ID</td>
		</tr>
	</tbody>
</table>
<para>
この配列を人間にとってわかりやすく表現すると、下のようになる。
</para>
<table id="table.dq3.C31350.view" class="lighttable">
	<caption>メダル景品</caption>
	<thead>
		<tr>
			<th>褒美 ID</th>
			<th>必要枚数</th>
			<th>アイテム</th>
		</tr>
	</thead>
	<tbody>
		<tr><td><literal>#$00</literal></td><td><literal>  5</literal></td><td>とげのむち        </td></tr>
		<tr><td><literal>#$01</literal></td><td><literal> 10</literal></td><td>ガーターベルト    </td></tr>
		<tr><td><literal>#$02</literal></td><td><literal> 20</literal></td><td>やいばのブーメラン</td></tr>
		<tr><td><literal>#$03</literal></td><td><literal> 30</literal></td><td>ちからのゆびわ    </td></tr>
		<tr><td><literal>#$04</literal></td><td><literal> 35</literal></td><td>インテリめがね    </td></tr>
		<tr><td><literal>#$05</literal></td><td><literal> 50</literal></td><td>しのびのふく      </td></tr>
		<tr><td><literal>#$06</literal></td><td><literal> 60</literal></td><td>せいぎのそろばん  </td></tr>
		<tr><td><literal>#$07</literal></td><td><literal> 70</literal></td><td>しっぷうのバンダナ</td></tr>
		<tr><td><literal>#$08</literal></td><td><literal> 80</literal></td><td>ドラゴンクロウ    </td></tr>
		<tr><td><literal>#$09</literal></td><td><literal> 90</literal></td><td>ふっかつのつえ    </td></tr>
		<tr><td><literal>#$0A</literal></td><td><literal> 95</literal></td><td>しんぴのビキニ    </td></tr>
		<tr><td><literal>#$0B</literal></td><td><literal>100</literal></td><td>ゴールドパス      </td></tr>
	</tbody>
</table>
</section> <!-- dq3.medal.hack.C31350 -->
</section> <!-- dq3.medal.hack -->
</section> <!-- dq3.medal -->
