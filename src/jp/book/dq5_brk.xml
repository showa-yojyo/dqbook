<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % replacement SYSTEM "replacement.xml">
  %replacement;
]>

<section id="dq5.brk"><?dbhtml filename="dq5_brk.html" ?>
<title>詳解 BRK 命令</title>
<para>
汎用の 65816 逆アセンブラーで ROM イメージを逆アセンブルしてコードを解析すると、
各 BRK 命令は 1 バイトのオペランドを伴うコードとして出力される。
ところがこれをそのまま &dq5_1992; に適用することは具合が悪いのだ。
このプログラムは BRK 命令を独自の規則でカスタマイズしており、
65816 CPU が規定するオペランドの値によって、さらに余分なオペランドを取るというものだ。
よって、ゲームプログラムの解析者が最初に行うべきことは、
この BRK 命令の普通のオペランドと付加オペランドのバイト数との間の対応を知り、
それに基づいたカスタマイズ版 65816 逆アセンブラーを実装することだと思われる。
さもなければ、解析作業者は BRK 命令を含むテキストを手作業で修正することになるし、
そもそもどのように修正すればよいのか判断できないはずだ。
現に記者は &dq5_1992; 特化版逆アセンブラーを実装するハメになった。
</para>
<para>
本節では &dq5_1992; のコードにおける BRK 命令の詳細について見ていく。
各 BRK オペランドに対応する付加オペランドのバイト数の表、
BRK 命令のハンドラーコードの振る舞いの要約、
そして各 BRK 呼び出しの意味をオペランド別に解説していくつもりだ。
</para>

<section id="dq5.brk.bytesize">
<title>オペランドのバイトサイズ表</title>
<para>
BRK 命令の正規のオペランドと、実際にオペランドを構成するバイト長との対応表を次に示す。
この情報がなければ、専用逆アセンブラーを実装することはできない。
ここで列「オペランド」は BRK 命令の正規のオペランドの値を、
列「サイズ」は正規のオペランドを含んだ、実際にオペランドを構成するバイトのサイズを、
列「命令の意味」はその BRK 命令のプログラム上の意味をそれぞれ示す。
</para>
<table id="table.dq5.brk.bytesize" class="lighttable">
  <caption>BRK オペランドのバイトサイズ表</caption>
  <thead>
    <tr><th>オペランド</th><th>サイズ</th><th>命令の意味</th></tr>
  </thead>
  <tbody>
    <tr><td align="right"><literal>#$00</literal></td><td align="right">1</td><td>単に RTI する</td></tr>
    <tr><td align="right"><literal>#$01</literal></td><td align="right">1</td><td>調査中または不明</td></tr>
    <tr><td align="right"><literal>#$02</literal></td><td align="right" rowspan="2">1</td><td rowspan="2">レジスター各種状態を保存または復帰</td></tr>
    <tr><td align="right"><literal>#$03</literal></td></tr>
    <tr><td align="right"><literal>#$04</literal></td><td align="right">3</td><td>調査中または不明</td></tr>
    <tr><td align="right"><literal>#$05</literal></td><td align="right">4</td><td>（未使用）</td></tr>
    <tr><td align="right"><literal>#$06</literal></td><td align="right">1</td><td>調査中または不明</td></tr>
    <tr><td align="right"><literal>#$07</literal></td><td align="right">2</td><td>（未使用）</td></tr>
    <tr><td align="right"><literal>#$08</literal></td><td align="right">1</td><td>調査中または不明</td></tr>
    <tr><td align="right"><literal>#$09</literal></td><td align="right">2</td><td>調査中または不明</td></tr>
    <tr><td align="right"><literal>#$0A</literal></td><td align="right">3</td><td>構造体オブジェクトのフィールドにアクセス（未使用）</td></tr>
    <tr><td align="right"><literal>#$0B</literal></td><td align="right" rowspan="3">3</td><td rowspan="3">フラグ制御</td></tr>
    <tr><td align="right"><literal>#$0C</literal></td></tr>
    <tr><td align="right"><literal>#$0D</literal></td></tr>
    <tr><td align="right"><literal>#$0E</literal></td><td align="right">1</td><td>調査中または不明</td></tr>
    <tr><td align="right"><literal>#$0F</literal></td><td align="right" rowspan="11">2</td><td rowspan="11">音響制御</td></tr>
    <tr><td align="right"><literal>#$10</literal></td></tr>
    <tr><td align="right"><literal>#$11</literal></td></tr>
    <tr><td align="right"><literal>#$12</literal></td></tr>
    <tr><td align="right"><literal>#$13</literal></td></tr>
    <tr><td align="right"><literal>#$14</literal></td></tr>
    <tr><td align="right"><literal>#$15</literal></td></tr>
    <tr><td align="right"><literal>#$16</literal></td></tr>
    <tr><td align="right"><literal>#$17</literal></td></tr>
    <tr><td align="right"><literal>#$18</literal></td></tr>
    <tr><td align="right"><literal>#$19</literal></td></tr>
    <tr><td align="right"><literal>#$1A</literal></td><td align="right">1</td><td>調査中または不明</td></tr>
    <tr><td align="right"><literal>#$80</literal></td><td align="right">1</td><td rowspan="20">構造体オブジェクトのフィールドにアクセス</td></tr>
    <tr><td align="right"><literal>#$81</literal></td><td align="right">2</td></tr>
    <tr><td align="right"><literal>#$82</literal></td><td align="right">1</td></tr>
    <tr><td align="right"><literal>#$83</literal></td><td align="right">2</td></tr>
    <tr><td align="right"><literal>#$84</literal></td><td align="right">1</td></tr>
    <tr><td align="right"><literal>#$85</literal></td><td align="right">2</td></tr>
    <tr><td align="right"><literal>#$86</literal></td><td align="right">1</td></tr>
    <tr><td align="right"><literal>#$87</literal></td><td align="right">2</td></tr>
    <tr><td align="right"><literal>#$88</literal></td><td align="right">2</td></tr>
    <tr><td align="right"><literal>#$89</literal></td><td align="right">3</td></tr>
    <tr><td align="right"><literal>#$8A</literal></td><td align="right">2</td></tr>
    <tr><td align="right"><literal>#$8B</literal></td><td align="right">3</td></tr>
    <tr><td align="right"><literal>#$8C</literal></td><td align="right">2</td></tr>
    <tr><td align="right"><literal>#$8D</literal></td><td align="right">3</td></tr>
    <tr><td align="right"><literal>#$8E</literal></td><td align="right">2</td></tr>
    <tr><td align="right"><literal>#$8F</literal></td><td align="right">3</td></tr>
    <tr><td align="right"><literal>#$90</literal></td><td align="right">3</td></tr>
    <tr><td align="right"><literal>#$91</literal></td><td align="right">4</td></tr>
    <tr><td align="right"><literal>#$92</literal></td><td align="right">4</td></tr>
    <tr><td align="right"><literal>#$93</literal></td><td align="right">5</td></tr>
    <tr><td align="right"><literal>#$94</literal></td><td align="right">2</td><td>アイテムの特性を参照</td></tr>
    <tr><td align="right"><literal>#$95</literal></td><td align="right">2</td><td rowspan="2">ウィンドウ処理？</td></tr>
    <tr><td align="right"><literal>#$96</literal></td><td align="right">2</td></tr>
    <tr><td align="right"><literal>#$97</literal></td><td align="right" rowspan="7">2</td><td>ID が <code>[#$0000, #$0100)</code> にある移動中メッセージを出力</td></tr>
    <tr><td align="right"><literal>#$98</literal></td><td>ID が <code>[#$0100, #$0200)</code> にある移動中メッセージを出力</td></tr>
    <tr><td align="right"><literal>#$99</literal></td><td>ID が <code>[#$0200, #$0300)</code> にある移動中メッセージを出力</td></tr>
    <tr><td align="right"><literal>#$9A</literal></td><td>ID が <code>[#$0300, #$0400)</code> にある移動中メッセージを出力</td></tr>
    <tr><td align="right"><literal>#$9B</literal></td><td>ID が <code>[#$0400, #$0500)</code> にある移動中メッセージを出力</td></tr>
    <tr><td align="right"><literal>#$9C</literal></td><td>ID が <code>[#$0500, #$0600)</code> にある移動中メッセージを出力</td></tr>
    <tr><td align="right"><literal>#$9D</literal></td><td>ID が <code>[#$0600, #$0700)</code> にある移動中メッセージを出力</td></tr>
    <tr><td align="right"><literal>#$9E</literal></td><td align="right" rowspan="3">2</td><td>ID が <code>[#$0000, #$0100)</code> にある戦闘中メッセージを出力</td></tr>
    <tr><td align="right"><literal>#$9F</literal></td><td>ID が <code>[#$0100, #$0200)</code> にある戦闘中メッセージを出力</td></tr>
    <tr><td align="right"><literal>#$A0</literal></td><td>ID が <code>[#$0200, #$0300)</code> にある戦闘中メッセージを出力</td></tr>
    <tr><td align="right"><literal>#$A1</literal></td><td align="right" rowspan="3">2</td><td>ID が <code>[#$0000, #$0100)</code> にある戦闘中メッセージを出力</td></tr>
    <tr><td align="right"><literal>#$A2</literal></td><td>ID が <code>[#$0100, #$0200)</code> にある戦闘中メッセージを出力</td></tr>
    <tr><td align="right"><literal>#$A3</literal></td><td>ID が <code>[#$0200, #$0300)</code> にある戦闘中メッセージを出力</td></tr>
    <tr><td align="right"><literal>#$A4</literal></td><td align="right" rowspan="3">2</td><td>ID が <code>[#$0000, #$0100)</code> にある戦闘中メッセージを出力</td></tr>
    <tr><td align="right"><literal>#$A5</literal></td><td>ID が <code>[#$0100, #$0200)</code> にある戦闘中メッセージを出力</td></tr>
    <tr><td align="right"><literal>#$A6</literal></td><td>ID が <code>[#$0200, #$0300)</code> にある戦闘中メッセージを出力</td></tr>
    <tr><td align="right"><literal>#$A7</literal></td><td align="right" rowspan="3">2</td><td>ID が <code>[#$0000, #$0100)</code> にある戦闘中メッセージを出力</td></tr>
    <tr><td align="right"><literal>#$A8</literal></td><td>ID が <code>[#$0100, #$0200)</code> にある戦闘中メッセージを出力</td></tr>
    <tr><td align="right"><literal>#$A9</literal></td><td>ID が <code>[#$0200, #$0300)</code> にある戦闘中メッセージを出力</td></tr>
    <tr><td align="right"><literal>#$AA</literal></td><td align="right">1</td><td>調査中または不明</td></tr>
    <tr><td align="right"><literal>#$AB</literal></td><td align="right">2</td><td>調査中または不明</td></tr>
    <tr><td align="right"><literal>#$AC</literal></td><td align="right">2</td><td>調査中または不明</td></tr>
    <tr><td align="right"><literal>#$AD</literal></td><td align="right">1</td><td>単に RTI する</td></tr>
    <tr><td align="right"><literal>#$FF</literal></td><td align="right">1</td><td>単に RTI する</td></tr>
  </tbody>
</table>
</section> <!-- dq5.brk.bytesize -->

<section id="dq5.brk.handler">
<title>BRK 命令ハンドラー概要</title>
<para>TODO: BRK 命令ハンドラー <varname>$008F80</varname> の要約。</para>
<para>
ここから BRK 命令が「余分なオペランド」を有するものについては、
それらの 1 番目、2 番目……を <varname>arg1</varname>, <varname>arg2</varname> のように呼ぶ。
また、A レジスターの上位バイトと下位バイトを AH, AL とそれぞれ呼ぶ（インデックスレジスターについても同様）。
</para>
</section> <!-- dq5.brk.handler -->

<section id="dq5.brk.spec">
<title>命令実行の詳細</title>
<para>本節では各正規オペランドについて、命令実行の意味なり挙動なりを解説する。</para>

<section id="dq5.brk.spec.02-03">
<title>オペランド <literal>#$02</literal>, <literal>#$03</literal>: レジスター各種の保存または復帰</title>
<para>
これらの命令実行の意図はゲームの内容とは関係がないので、興味のない読者は本節を飛ばして結構だ。
</para>
<para>
<code>BRK #$02</code> と <code>BRK #$03</code> は常に対で用いる。
これは BRK 命令の全オペランドに対して共通するコードを流用することで、
プログラマーがレジスター各種をスタックに保存するコードや、
スタックからレジスターに復帰するコードを書くのを省力化することができ、
さらにこれらの処理を表現するのに必要な ROM を数バイト節約できる。
前者の命令実行が状態を保存し、後者はその状態に復帰するものだ。
実際の例を借りて説明したい。
</para>

<programlisting>
BRK #$02
JSR $8062
BRK #$03
RTL
</programlisting>

<para>
このように両 BRK 命令をサンドイッチのように用いる必要がある。
今はたまたま <code>JSR $8062</code> しかないが、
一般には具の部分に任意のコードがあってよい。
もっともサンドイッチの外に飛び出すような激しい分岐命令やジャンプ命令はないようにする。
そして上記コードは次の非実在コードと論理的に同値である（実際の実装のほうがやや丁寧に処理しているが）。
</para>
<programlisting>
PHP
REP #$30
PHA
PHX
PHY
PHD
JSR $8062
PLB
PLD
PLY
PLX
PLA
PLP
...                 ; nv--dizc 各ビットを現在のそれで上書きする
RTL
</programlisting>
</section> <!-- dq5.brk.spec.02-03 -->

<section id="dq5.brk.spec.0B-0D">
<title>オペランド <literal>#$0B</literal>, ..., <literal>#$0D</literal>: フラグ制御</title>
<para>
オペランドが <literal>#$0B</literal> から <literal>#$0D</literal> の間の値である BRK 命令の実行は、
アドレス <varname>$7E2190</varname> からビット単位で直列配置されたフラグを管理する。
どの命令も「余分なオペランド」を二個取る。
<varname>arg1</varname> はビットマスクを、
<varname>arg2</varname> は対象フラグを含むバイトのアドレスの
<varname>$7E2190</varname> からのオフセット値をそれぞれ表現する。
ビット演算は BRK 命令の本来のオペランドによって固定されている。それを次の表に示す。
</para>

<table id="table.dq5.brk.0B-0D" class="lighttable">
  <caption>BRK #$0B-0D によるフラグ制御</caption>
  <thead>
    <tr><th>オペランド</th><th>フラグ制御</th></tr>
  </thead>
  <tbody>
    <tr><td align="right"><literal>#$0B</literal></td><td>フラグの ON/OFF をテストする</td></tr>
    <tr><td align="right"><literal>#$0C</literal></td><td>フラグを ON にする</td></tr>
    <tr><td align="right"><literal>#$0D</literal></td><td>フラグを OFF にする</td></tr>
  </tbody>
</table>

<para>
BRK 命令によるフラグ制御の実例を以下にいくつか挙げる。
フラグのテストは zero レジスターの状態で判定するので、たいてい BEQ または BNE 命令を伴う。
このコードから <varname>$7E21B3</varname> のビット <literal>#$08</literal> が主人公の妻を表すフラグであることが判明する。
</para>
<programlisting>
02/F6D0:    009C        BRK #$9C            ; #$0556: [1003]ルドマン「わっはっは。[1000]やあ ゆかい ゆかい！
02/F6D2:    56
02/F6D3:    009C        BRK #$9C            ; #$056B: [1003]ルドマン「魔界の王を たおし[1000]世界に 平和を とりもどして[1000]くれるとはな。
02/F6D5:    6B
02/F6D6:    000B        BRK #$0B            ; test_bits $7E21B3 #$08: 妻がビアンカか
02/F6D8:    0823
02/F6DA:    D005        BNE $F6E1
02/F6DC:    009C        BRK #$9C            ; #$056D: [1003]ルドマン「さすが [1012]！[1000]わしが フローラのムコと[1000]認めただけのことは あるわい。
02/F6DE:    6D
02/F6DF:    8003        BRA $F6E4
02/F6E1:    009C        BRK #$9C            ; #$056C: [1003]ルドマン「さすが [1012]と[1000]その子供たちじゃ。
02/F6E3:    6C
</programlisting>

<para>
フラグを立てる処理を引用する。
物理的にはアドレス <varname>$7E21D2</varname> にある 1 バイト値のビット <literal>#$10</literal> を 1 にする。
</para>
<programlisting>
06/B8D8:    009B        BRK #$9B            ; #$04FD: [1003]コリンズ「大切に つかえよ。
06/B8DA:    FD
06/B8DB:    000C        BRK #$0C            ; set_bits $7E21D2 #$10: コリンズからかぜのぼうしを入手した
06/B8DD:    1042
06/B8DF:    60          RTS
</programlisting>

<para>
最後にフラグを立っていない状態にする処理も挙げておく。
これはビットマスク <varname>arg1</varname> をそのまま AND することで実現することに注意を要する。
後続のシリーズのような対象となるビットの EOR ではない。
</para>
<programlisting>
12/F185:    000D        BRK #$0D            ; mask_bits $7E21D4 #$7F: てんくうのかぶとを入手した
12/F187:    7F44
12/F189:    0097        BRK #$97            ; #$0013: [1006]
12/F18B:    13
12/F18C:    009B        BRK #$9B            ; #$0450: [1006][1016]は ふと 気が ついた。[1002][1006]なんと 持ち物が いっぱいだった！[...]
12/F18E:    50
</programlisting>
<para>
上のコードはテルパドールでてんくうのかぶとを息子にかぶせるイベントの例外的な処理だ。
この場合は諸般の事情で先に当該フラグを立ててしまったので、このようなキャンセルを実装している。
言い忘れたが <code>BRK #$97</code> と <code>BRK #$9B</code> についてはこの後 <xref linkend="dq5.brk.spec.97-9D"/> で述べる。
</para>
</section> <!-- dq5.brk.spec.0B-0D -->

<section id="dq5.brk.spec.0E-19">
<title>オペランド <literal>#$0E</literal>, ..., <literal>#$19</literal>: 音響制御</title>
<para>
オペランドが <literal>#$0E</literal> から <literal>#$19</literal> の間の値である BRK 命令の実行は、
それぞれが何らかの音響制御を担当する。<varname>$24FF83</varname> 系処理。
音響制御 BRK 命令は「余分なオペランド」を一個または二個有しており、基本的には
<varname>arg1</varname> がサウンド ID だと思ってよい。
この値と実際に鳴る音楽または効果音との対応表を次に示す。
</para>

<table id="table.dq5.brk.0E-19" class="lighttable">
  <caption>BRK #$0E-19 による arg1 と楽曲・効果音との対応表</caption>
  <thead>
    <tr><th>arg1</th><th>楽曲または効果音</th></tr>
  </thead>
  <tbody>
    <tr><td align="right"><literal>#$00</literal></td><td>無音</td></tr>
    <tr><td align="right"><literal>#$01</literal></td><td>王宮のトランペット</td></tr>
    <tr><td align="right"><literal>#$02</literal></td><td>地平の彼方へ</td></tr>
    <tr><td align="right"><literal>#$03</literal></td><td>空飛ぶじゅうたん</td></tr>
    <tr><td align="right"><literal>#$04</literal></td><td>大海原へ</td></tr>
    <tr><td align="right"><literal>#$05</literal></td><td>街角のメロディ</td></tr>
    <tr><td align="right"><literal>#$06</literal></td><td>街は生きている</td></tr>
    <tr><td align="right"><literal>#$07</literal></td><td>カジノ都市</td></tr>
    <tr><td align="right"><literal>#$08</literal></td><td>淋しい村</td></tr>
    <tr><td align="right"><literal>#$09</literal></td><td>洞窟に魔の影が</td></tr>
    <tr><td align="right"><literal>#$0A</literal></td><td>死の塔</td></tr>
    <tr><td align="right"><literal>#$0B</literal></td><td>高貴なるレクイエム</td></tr>
    <tr><td align="right"><literal>#$0C</literal></td><td>聖</td></tr>
    <tr><td align="right"><literal>#$0D</literal></td><td>天空城</td></tr>
    <tr><td align="right"><literal>#$0E</literal></td><td>暗黒の世界</td></tr>
    <tr><td align="right"><literal>#$0F</literal></td><td>結婚ワルツ</td></tr>
    <tr><td align="right"><literal>#$10</literal></td><td>間奏曲</td></tr>
    <tr><td align="right"><literal>#$11</literal></td><td>愛の旋律</td></tr>
    <tr><td align="right"><literal>#$12</literal></td><td>哀愁物語</td></tr>
    <tr><td align="right"><literal>#$13</literal></td><td>さびれた村</td></tr>
    <tr><td align="right"><literal>#$14</literal></td><td>はめつの予感</td></tr>
    <tr><td align="right"><literal>#$15</literal></td><td>序曲のマーチ</td></tr>
    <tr><td align="right"><literal>#$16</literal></td><td>不死身の敵に挑む</td></tr>
    <tr><td align="right"><literal>#$17</literal></td><td>戦火を交えて</td></tr>
    <tr><td align="right"><literal>#$18</literal></td><td>大魔王</td></tr>
    <tr><td align="right"><literal>#$19</literal></td><td>スライムレースファンファーレ</td></tr>
    <tr><td align="right"><literal>#$1A</literal></td><td>スライム・レース</td></tr>
    <tr><td align="right"><literal>#$1B</literal></td><td>スライムレースはずれ</td></tr>
    <tr><td align="right"><literal>#$1C</literal></td><td>仲間</td></tr>
    <tr><td align="right"><literal>#$1D</literal></td><td>宿屋</td></tr>
    <tr><td align="right"><literal>#$1E</literal></td><td>教会：治療</td></tr>
    <tr><td align="right"><literal>#$1F</literal></td><td>勝利</td></tr>
    <tr><td align="right"><literal>#$20</literal></td><td>教会：おいのり</td></tr>
    <tr><td align="right"><literal>#$21</literal></td><td>レベル・アップ</td></tr>
    <tr><td align="right"><literal>#$22</literal></td><td>重要品入手</td></tr>
    <tr><td align="right"><literal>#$23</literal></td><td>呪いのモチーフ</td></tr>
    <tr><td align="right"><literal>#$24</literal></td><td>何か見つけた</td></tr>
    <tr><td align="right"><literal>#$25</literal></td><td>カジノ大当たり</td></tr>
    <tr><td align="right"><literal>#$26</literal></td><td>カジノ中当たり</td></tr>
    <tr><td align="right"><literal>#$27</literal></td><td>カジノ小当たり</td></tr>
    <tr><td align="right"><literal>#$28</literal></td><td>？</td></tr>
    <tr><td align="right"><literal>#$29</literal></td><td>はるかぜのフルート</td></tr>
    <tr><td align="right"><literal>#$2A</literal></td><td>はるかぜのフルート（長尺）</td></tr>
    <tr><td align="right"><literal>#$2B</literal></td><td>ようせいのホルン</td></tr>
    <tr><td align="right"><literal>#$2C</literal></td><td>ようせいのホルン（長尺）</td></tr>
    <tr><td align="right"><literal>#$2D</literal></td><td>悪のモチーフ</td></tr>
    <tr><td align="right"><literal>#$2E</literal></td><td>階段等を発見する音</td></tr>
    <tr><td align="right"><literal>#$2F</literal></td><td>バロンのつのぶえ（？）</td></tr>
    <tr><td align="right"><literal>#$30</literal></td><td>ゴールドオーブ落下</td></tr>
    <tr><td align="right"><literal>#$31</literal></td><td>マグマのつえ</td></tr>
    <tr><td align="right"><literal>#$32</literal></td><td>台詞音</td></tr>
    <tr><td align="right"><literal>#$33</literal></td><td>ピッ</td></tr>
    <tr><td align="right"><literal>#$34</literal></td><td>バリア音</td></tr>
    <tr><td align="right"><literal>#$35</literal></td><td>宝箱を開く音</td></tr>
    <tr><td align="right"><literal>#$36</literal></td><td>回復音</td></tr>
    <tr><td align="right"><literal>#$37</literal></td><td>逃走音</td></tr>
    <tr><td align="right"><literal>#$38</literal></td><td>派手な打撃音</td></tr>
    <tr><td align="right"><literal>#$39</literal></td><td>ボーッ</td></tr>
    <tr><td align="right"><literal>#$3A</literal></td><td>マホカンタ音</td></tr>
    <tr><td align="right"><literal>#$3B</literal></td><td>短い効果音</td></tr>
    <tr><td align="right"><literal>#$3C</literal></td><td>？</td></tr>
    <tr><td align="right"><literal>#$3D</literal></td><td>チャージ音</td></tr>
    <tr><td align="right"><literal>#$3E</literal></td><td>地下室に妖精の村への階段が出現する音</td></tr>
    <tr><td align="right"><literal>#$3F</literal></td><td>稲妻</td></tr>
    <tr><td align="right"><literal>#$40</literal></td><td>？</td></tr>
    <tr><td align="right"><literal>#$41</literal></td><td>？</td></tr>
    <tr><td align="right"><literal>#$42</literal></td><td>赤ん坊</td></tr>
    <tr><td align="right"><literal>#$43</literal></td><td>波の音</td></tr>
    <tr><td align="right"><literal>#$44</literal></td><td>ワープ音</td></tr>
    <tr><td align="right"><literal>#$45</literal></td><td>てんくうのベル音</td></tr>
    <tr><td align="right"><literal>#$46</literal></td><td>ほうきで掃くような音</td></tr>
  </tbody>
</table>

<para>
実例をいくつか次に挙げる。
<code>BRK #$0F</code> でサウンド <literal>#$23</literal> すなわち呪いの効果音を演奏させる。
<code>BRK #$98</code> については <xref linkend="dq5.brk.spec.97-9D"/> で述べる。
</para>
<programlisting>
25/8211:    000F        BRK #$0F            ; sound #$23: 呪いのモチーフ
25/8213:    23
25/8214:    0098        BRK #$98            ; #$01D0: [1006]まことに ざんねんですが[1000]ぼうけんのしょ[1004]は[1000]消えてしまいました。
25/8216:    D0
</programlisting>

<para>
<code>BRK #$12</code> はてんくうのベル専用の命令のようだ。連続実行することで雰囲気を出す。
</para>
<programlisting>
00/CA33:    0012        BRK #$12            ; sound #$44: てんくうのベル音
00/CA35:    44
00/CA36:    0012        BRK #$12            ; sound #$44: てんくうのベル音
00/CA38:    44
</programlisting>

<para>
これはゲーム序盤のパパス同伴戦闘終了時のやりとりだ。
<code>BRK #$16</code> でサウンド <literal>#$36</literal> すなわち HP 回復の効果音を演奏させる。
</para>
<programlisting>
06/CF32:    0098        BRK #$98            ; message #$01E3: [1003]パパス「大丈夫か？ [1012]。
06/CF34:    E3
06/CF35:    0098        BRK #$98            ; message #$01E6: [1006]パパスは ホイミを となえた！[1000][1012]の キズが かいふくした！
06/CF37:    E6
06/CF38:    0016        BRK #$16            ; sound #$36 #$00: 回復音
06/CF3A:    3600
06/CF3C:    0098        BRK #$98            ; message #$01E5: [1003]パパス「では いくとしよう！
06/CF3E:    E5
</programlisting>

</section> <!-- dq5.brk.spec.0E-19 -->

<section id="dq5.brk.spec.80-93">
<title>オペランド <literal>#$80</literal>, ..., <literal>#$93</literal>: オブジェクトのフィールドにアクセス</title>
<para>
BRK 命令のオペランドが <literal>#$80</literal> から <literal>#$93</literal> の間の値であれば、
これはサブルーチン <varname>$218AFC</varname> のラッパーとして振る舞う。
詳しくは <xref linkend="dq5.accessor"/> で議論するが、あるオブジェクトの特定の性質へアクセスするというものだ。
オペランドの値と「余分なオペランド」の値によって構造体のフィールドとアクセス方法が一意に決まり、
対象となるオブジェクトの指定は別途指定する。
</para>
<para>
BRK 命令実行時のオペランド、「余分なオペランド」、レジスターの値によって、
どのオブジェクトのどのフィールドをどのように処理するのかが一意に決定する。
これを詳細に述べるために、静的なデータ構造を順を追って説明したい。
</para>
<para>
まず BRK 命令に関係するオペランド、「余分なオペランド」、レジスターの状況を表にまとめる。
この表は、各正規オペランドに対して、BRK 命令実行がサブルーチン <varname>$218AFC</varname> 呼び出しのために必要な
<varname>$38</varname> 等の値をどの要素からコピーするのかを示している。
</para>

<table id="table.dq5.brk.80-93" class="lighttable">
  <caption>BRK #$88-93 によるサブルーチン $218AFC 呼び出しのための変数設定表</caption>
  <thead>
    <tr><th>オペランド</th><th>$38</th><th>$3F</th><th>$42</th><th>$43</th><th>$44</th></tr>
  </thead>
  <tbody>
    <tr><td align="right"><literal>#$80</literal></td><td>XL</td><td><literal>#$00</literal></td><td>AL</td><td>n/a</td><td>n/a</td></tr>
    <tr><td align="right"><literal>#$81</literal></td><td>XL</td><td>arg1</td><td>AL</td><td>n/a</td><td>n/a</td></tr>
    <tr><td align="right"><literal>#$82</literal></td><td>XL</td><td><literal>#$00</literal></td><td>AL</td><td>AH</td><td>n/a</td></tr>
    <tr><td align="right"><literal>#$83</literal></td><td>XL</td><td>arg1</td><td>AL</td><td>AH</td><td>n/a</td></tr>
    <tr><td align="right"><literal>#$84</literal></td><td>XL</td><td><literal>#$00</literal></td><td>n/a</td><td>n/a</td><td>n/a</td></tr>
    <tr><td align="right"><literal>#$85</literal></td><td>XL</td><td>arg1</td><td>n/a</td><td>n/a</td><td>n/a</td></tr>
    <tr><td align="right"><literal>#$86</literal></td><td>AL</td><td><literal>#$00</literal></td><td>n/a</td><td>n/a</td><td>n/a</td></tr>
    <tr><td align="right"><literal>#$87</literal></td><td>AL</td><td>arg1</td><td>n/a</td><td>n/a</td><td>n/a</td></tr>
    <tr><td align="right"><literal>#$88</literal></td><td>arg1</td><td><literal>#$00</literal></td><td>n/a</td><td>n/a</td><td>n/a</td></tr>
    <tr><td align="right"><literal>#$89</literal></td><td>arg2</td><td>arg1</td><td>n/a</td><td>n/a</td><td>n/a</td></tr>
    <tr><td align="right"><literal>#$8A</literal></td><td>arg1</td><td><literal>#$00</literal></td><td>AL</td><td>n/a</td><td>n/a</td></tr>
    <tr><td align="right"><literal>#$8B</literal></td><td>arg2</td><td>arg1</td><td>AL</td><td>n/a</td><td>n/a</td></tr>
    <tr><td align="right"><literal>#$8C</literal></td><td>arg1</td><td><literal>#$00</literal></td><td>AL</td><td>AH</td><td>n/a</td></tr>
    <tr><td align="right"><literal>#$8D</literal></td><td>arg2</td><td>arg1</td><td>AL</td><td>AH</td><td>n/a</td></tr>
    <tr><td align="right"><literal>#$8E</literal></td><td>arg1</td><td><literal>#$00</literal></td><td>AL</td><td>XL</td><td>XH</td></tr>
    <tr><td align="right"><literal>#$8F</literal></td><td>arg2</td><td>arg1</td><td>AL</td><td>XL</td><td>XH</td></tr>
    <tr><td align="right"><literal>#$90</literal></td><td>arg1</td><td><literal>#$00</literal></td><td>AL</td><td>arg2</td><td>n/a</td></tr>
    <tr><td align="right"><literal>#$91</literal></td><td>arg2</td><td>arg1</td><td>AL</td><td>arg3</td><td>n/a</td></tr>
    <tr><td align="right"><literal>#$92</literal></td><td>arg1</td><td><literal>#$00</literal></td><td>AL</td><td>arg2</td><td>arg3</td></tr>
    <tr><td align="right"><literal>#$93</literal></td><td>arg2</td><td>arg1</td><td>AL</td><td>arg3</td><td>arg4</td></tr>
  </tbody>
</table>

<para>
<varname>$38</varname> 等については <xref linkend="dq5.accessor.specification.conditions"/> を参照。
また、一連のシステムについては <xref linkend="dq5.accessor"/> を参照して欲しい。
</para>

<para>
例えば <varname>$38</varname> が <literal>#$0B</literal> ならば、
その BRK 命令は「指定の仲間キャラクターの MP をゼロにセットする」処理を実行する。
次の実例は、戦闘中にパルプンテを唱えた際のある事象のコードだ。
簡単に言うと、反復処理で <code>BRK #$89</code> を実行することにより、戦闘中の仲間キャラクターの MP をゼロにするコードだ。
なお <code>BRK #$A5</code> はメッセージ表示処理であり、これについては <xref linkend="dq5.brk.spec.A4-A6"/> で述べる。
</para>
<programlisting>
20/ECBE:    2026EF      JSR $EF26
20/ECC1:    ADF310      LDA $10F3
20/ECC4:    8542        STA $42
20/ECC6:    85F5        STA $F5
20/ECC8:    2033EF      JSR $EF33           ; 味方メンバーのある状態を確認
20/ECCB:    F00A        BEQ $ECD7
20/ECCD:    0089        BRK #$89            ; 仲間キャラクターの MP をゼロにセット
20/ECCF:    800B                            ; arg1, arg2 = #$80, #$0B
20/ECD1:    00A5        BRK #$A5            ; #$0117: [F7]の ＭＰが なくなった！[F2]
20/ECD3:    17
20/ECD4:    20D69D      JSR $9DD6
20/ECD7:    EEF310      INC $10F3
20/ECDA:    ADF310      LDA $10F3
20/ECDD:    CDF410      CMP $10F4
20/ECE0:    90DF        BCC $ECC1
20/ECE2:    60          RTS
</programlisting>
</section> <!-- dq5.brk.spec.80-93 -->

<section id="dq5.brk.spec.94">
<title>オペランド <literal>#$94</literal>: アイテムの特性を参照</title>
<para>
BRK 命令のオペランドが <literal>#$94</literal> であれば、
この命令実行は指定したアイテムに関する何らかの性質を参照することを意味する。
正規のオペランドとは別に 1 バイトの「余分なオペランド」を呼び出し元から取り、どの特性を参照するのかを決定する。
次に余分なオペランドの値 <varname>arg1</varname> と、対応する命令実行が参照する特性との対応表を示す
（実際に参照するデータの列についてはアイテムのデータ構造については <xref linkend="dq5.items" /> を参照）。
</para>

<table id="table.dq5.brk.94" class="lighttable">
  <caption>BRK #$94</caption>
  <thead>
    <tr><th>arg1</th><th>実際に参照するデータ</th><th>参照する特性</th></tr>
  </thead>
  <tbody>
    <tr><td align="right"><literal>#$00</literal></td><td><literal><![CDATA[$23B231,X & #$07]]></literal></td><td>アイテムの種別</td></tr>
    <tr><td align="right"><literal>#$01</literal></td><td><literal>$23B669,X</literal> を含む複数配列</td><td>アイテムを装備できるか</td></tr>
    <tr><td align="right"><literal>#$02</literal></td><td><literal><![CDATA[$23B159,X & #$03]]></literal></td><td>アイテムの値段</td></tr>
    <tr><td align="right"><literal>#$03</literal></td><td><literal>$23B4B9,X</literal></td><td>アイテムによるパラメーターの増加分</td></tr>
    <tr><td align="right"><literal>#$04</literal></td><td><literal><![CDATA[$23B159,X & #$20]]></literal></td><td>アイテムを使うとなくなるものかどうか</td></tr>
    <tr><td align="right"><literal>#$05</literal></td><td><literal><![CDATA[$23B159,X & #$10]]></literal></td><td>アイテムを捨てることができるかどうか</td></tr>
    <tr><td align="right"><literal>#$06</literal></td><td><literal><![CDATA[$23B159,X & #$08]]></literal></td><td>アイテムを店屋で売れるかどうか</td></tr>
    <tr><td align="right"><literal>#$07</literal></td><td><literal><![CDATA[$23B159,X & #$04]]></literal></td><td>不明または未使用</td></tr>
    <tr><td align="right"><literal>#$08</literal></td><td><literal><![CDATA[$23B159,X & #$80]]></literal></td><td>移動中「つかう」コマンドの最初のメッセージを省略する</td></tr>
    <tr><td align="right"><literal>#$09</literal></td><td><literal><![CDATA[$23B159,X & #$40]]></literal></td><td>移動中「つかう」コマンドで「だれに」の入力を求める</td></tr>
    <tr><td align="right"><literal>#$0A</literal></td><td><literal><![CDATA[$23B231,X & #$80]]></literal></td><td>戦闘中「つかう」コマンドで専用の処理があるかどうか</td></tr>
    <tr><td align="right"><literal>#$0B</literal></td><td><literal><![CDATA[$23B231,X & #$20]]></literal></td><td>戦闘中「つかう」の対象が敵側である</td></tr>
    <tr><td align="right"><literal>#$0C</literal></td><td><literal><![CDATA[$23B231,X & #$08]]></literal></td><td>アイテムが呪われているかどうか</td></tr>
    <tr><td align="right"><literal>#$0D</literal></td><td><literal><![CDATA[$23B231,X & #$40]]></literal></td><td>戦闘中「つかう」の対象を選択する</td></tr>
    <tr><td align="right"><literal>#$0E</literal></td><td><literal><![CDATA[$23B231,X & #$10]]></literal></td><td>戦闘中「つかう」の対象が複数である</td></tr>
    <tr><td align="right"><literal>#$0F</literal></td><td><literal><![CDATA[$23B3E1,X & #$3F]]></literal></td><td>戦闘中「つかう」ときのメッセージ配列 <literal>$2781D0,X</literal> の添字</td></tr>
    <tr><td align="right"><literal>#$10</literal></td><td><literal><![CDATA[$23B3E1,X & #$80]]></literal></td><td>インパスで種別を鑑定するかどうか</td></tr>
    <tr><td align="right"><literal>#$11</literal></td><td><literal><![CDATA[$23B3E1,X & #$40]]></literal></td><td>インパスで装備可能な者を鑑定するかどうか</td></tr>
    <tr><td align="right"><literal>#$12</literal></td><td><literal><![CDATA[$23B309,X & #$80]]></literal></td><td>インパスで消耗品かどうかを鑑定するかどうか</td></tr>
    <tr><td align="right"><literal>#$13</literal></td><td><literal><![CDATA[$23B309,X & #$40]]></literal></td><td>インパスで売却できるかどうかを鑑定するかどうか</td></tr>
    <tr><td align="right"><literal>#$14</literal></td><td><literal><![CDATA[$23B309,X & #$3F]]></literal></td><td>インパスで「～のようだ」系の文言を述べるかどうか</td></tr>
  </tbody>
</table>
<para>
実例として、ある <code>BRK #$94</code> の呼び出しを次に示す。
「余分なオペランド」として <literal>#$06</literal> を指定することによって、
アイテムが店屋で売れるかどうかを示すビットの値を carry ビットに得る。
なお <code>BRK #$9B</code> については <xref linkend="dq5.brk.spec.97-9D"/> で述べる。
</para>
<programlisting>
11/8463:    0094        BRK #$94            ; #$06: アイテム::鑑定::売却可フラグ
11/8465:    06
11/8466:    9005        BCC $846D
11/8468:    009B        BRK #$9B            ; message #$0460: [1006]店屋に 売ろうとしても これには[1000]ねだんは つけられないだろう。
11/846A:    60
11/846B:    800A        BRA $8477
11/846D:    AD530B      LDA $0B53           ; アイテム ID
11/8470:    225BDF06    JSR $06DF5B         ; アイテムの売値を計算
11/8474:    009B        BRK #$9B            ; message #$045F: [1006]もし 店屋に 売れば[1000][1004]ゴールドに なるだろう。
11/8476:    5F
</programlisting>
</section> <!-- dq5.brk.spec.94 -->

<section id="dq5.brk.spec.95-96">
<title>オペランド <literal>#$95</literal>, <literal>#$96</literal>: ウィンドウ処理</title>
<para>
BRK 命令のオペランドの値が <literal>#$95</literal> または <literal>#$96</literal> のいずれかであれば、
この命令はウィンドウ処理を実行する。大抵の場合は何らかのウィンドウ（群）を画面上に新たに描画する。
値 <varname>arg1</varname> が表すのは基本的にはウィンドウ ID であり、
例外的に値 <literal>#$FF</literal> の場合には、メッセージウィンドウの終了を指示する命令を実行するようだ。
</para>
<para>
ウィンドウ処理全般については <xref linkend="dq5.windows" /> を参照。
</para>
</section> <!-- dq5.brk.spec.95-96 -->

<section id="dq5.brk.spec.97-9D">
<title>オペランド <literal>#$97</literal>, ..., <literal>#$9D</literal>: 移動時メッセージ処理</title>
<para>
BRK 命令のオペランドが <literal>#$97</literal> から <literal>#$9D</literal> までのいずれかの値であれば、
この命令はサブルーチン <varname>$248157</varname> による移動時のメッセージ表示処理を実行する。
画面下のウィンドウ内にテキストを描画したりする。
この命令はさらに 1 バイトの値を呼び出し元から参照し、これを表示するメッセージの ID の値の下位 1 のバイトとして扱う。
上位の 1 バイトは BRK 命令のオペランドによって決まる。
<literal>#$97</literal> ならば上位バイトは <literal>#$00</literal> となり、
<literal>#$98</literal> ならば <literal>#$01</literal> となり、以下同様となる。
</para>

<para>
実例として、ある <code>BRK #$97</code> の呼び出しを次に示す。
参考までにメッセージテキストを逆アセンブリコードの右側にコメントしておく。
</para>
<programlisting>
06/CE0D:    0097        BRK #$97            ; message #$00B6: よくぞもどられた！[1000][1011]どの。
06/CE0F:    B6
06/CE10:    0097        BRK #$97            ; message #$00B7: おお 神よ！[1000]この者[1005]に 尊き ご加護の[1000]あらんことを！ アーメン！
06/CE12:    B7
</programlisting>

<para>
移動中メッセージ処理については <xref linkend="dq5.text.travel" /> を参照。
</para>
</section> <!-- dq5.brk.spec.97-9D -->

<section id="dq5.brk.spec.9E-A0">
<title>オペランド <literal>#$9E</literal>, ..., <literal>#$A0</literal>: 戦闘時メッセージ処理</title>
<para>
BRK 命令のオペランドが <literal>#$9E</literal> から <literal>#$A7</literal> までのいずれかの値であれば、
この命令はサブルーチン <varname>$2485E0</varname> による戦闘時のメッセージ表示処理を実行する。
移動時メッセージ表示の BRK 命令実行と同様に、余分なオペランドを 1 バイト取り、
同様の規則でメッセージ ID の 2 バイト値を決定する。
</para>
<para>
実例として、ある <code>BRK #$9E</code> の呼び出しを次に示す。
</para>
<programlisting>
25/89F5:    009E        BRK #$9E            ; message #$0000: 
25/89F7:    00
25/89F8:    009E        BRK #$9E            ; message #$00B6: しかし [EE][FA]は[FF]これいじょう ものを もてない。
25/89FA:    B6
25/89FB:    009E        BRK #$9E            ; message #$00B7: もちものを すてますか？
25/89FD:    B7
</programlisting>

<para>
戦闘中メッセージ処理については <xref linkend="dq5.text.battle" /> を参照。
</para>
</section> <!-- dq5.brk.spec.9E-A0 -->

<section id="dq5.brk.spec.A1-A3">
<title>オペランド <literal>#$A1</literal>, ..., <literal>#$A3</literal>: 戦闘時メッセージ処理 </title>
<para>
こちらも戦闘時メッセージ処理だが、サブルーチン <varname>$2485D4</varname> を用いる。
実例として、ある <code>BRK #$A1</code> の呼び出しを次に示す。
</para>
<programlisting>
26/8452:    9005        BCC $8459
26/8454:    00A1        BRK #$A1            ; message #$0008: [F7]は こちらが みがまえるまえに[FF]おそいかかってきた！
26/8456:    08
26/8457:    8003        BRA $845C
26/8459:    00A1        BRK #$A1            ; message #$0009: [F7]は[FF]いきなり おそいかかってきた！
26/845B:    09
</programlisting>
</section> <!-- dq5.brk.spec.A1-A3 -->

<section id="dq5.brk.spec.A4-A6">
<title>オペランド <literal>#$A4</literal>, ..., <literal>#$A6</literal>: 戦闘時メッセージ処理</title>
<para>
こちらも戦闘時メッセージ処理だが、サブルーチン <varname>$2485D8</varname> を用いる。
実例として、ある <code>BRK #$A4</code> の呼び出しを次に示す。
</para>
<programlisting>
20/F4D4:    ADF610      LDA $10F6
20/F4D7:    3005        BMI $F4DE
20/F4D9:    00A4        BRK #$A4            ; message #$0078: ひかりのかべが じゅもんを はねかえした！
20/F4DB:    78
20/F4DC:    8003        BRA $F4E1
20/F4DE:    00A4        BRK #$A4            ; message #$0077: じゅもんは ひかりのかべに はじかれた！
20/F4E0:    77
</programlisting>
</section> <!-- dq5.brk.spec.A4-A6 -->

<section id="dq5.brk.spec.A7-A9">
<title>オペランド <literal>#$A7</literal>, ..., <literal>#$A9</literal>: 戦闘時メッセージ処理</title>
<para>
こちらも戦闘時メッセージ処理だが、サブルーチン <varname>$2485DC</varname> を用いる。
実例として、ある <code>BRK #$A7</code> と <code>BRK #$A8</code> の呼び出しを次に示す。
</para>
<programlisting>
20/F59E:    CD1310      CMP $1013
20/F5A1:    F005        BEQ $F5A8
20/F5A3:    00A7        BRK #$A7            ; message #$00A1: [F7]を やっつけた！
20/F5A5:    A1
20/F5A6:    8003        BRA $F5AB
20/F5A8:    00A8        BRK #$A8            ; message #$0135: [F7]は まけてしまった！
20/F5AA:    35
</programlisting>
</section> <!-- dq5.brk.spec.A7-A9 -->
</section> <!-- dq5.brk.spec -->
</section> <!-- dq5.brk -->
