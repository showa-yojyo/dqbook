<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % replacement SYSTEM "replacement.xml">
  %replacement;
]>

<section id="dq6.spell_commands"><?dbhtml filename="dq6_spell_commands.html" ?>
<title>移動中の呪文コマンド処理</title>
<para>
本節では移動中に呪文を唱えるときに発生する処理を呪文ごとに見ていく。
プレイヤーがコマンドメニューから「じゅもん」を選択し、
どのパーティーにメンバーが唱えるのかを選択したあとに一つ呪文を選択する。
すると十分な MP があるときに、プログラムは選択された呪文に対応するサブルーチンを呼び出す。
</para>

<section id="dq6.spell_commands.C3B814">
<title>呪文ハンドラーテーブル</title>
<para>
呪文の文字列インデックスと処理コードの開始アドレスとの対応表はアドレス
<varname>$C3B814</varname> に次のように定義されている。
呪文ウィンドウで選択された呪文文字列のインデックスと行前半が一致すれば、
プログラムカウンターを行後半のアドレスへ JMP させる。
</para>
<programlisting>
C3/B814:    3000A4B9    ; ホイミ
C3/B818:    330049BA    ; べホイミ
C3/B81C:    360050BA    ; べホマ
C3/B820:    390057BA    ; べホマラー
C3/B824:    3A00CABA    ; べホマズン
C3/B828:    3E00D1BA    ; キアリー
C3/B82C:    3B004ABB    ; ザオラル
C3/B830:    3C00F8BB    ; ザオリク
C3/B834:    410070BC    ; ルーラ
C3/B838:    9E004ABD    ; リレミト
C3/B83C:    A900A6BD    ; くちぶえ
C3/B840:    A100DEBD    ; トヘロス
C3/B844:    A00010BE    ; トラマナ
C3/B848:    A40024BE    ; フローミ
C3/B84C:    A2007FBE    ; タカのめ
C3/B850:    A500F9BE    ; とうぞくのはな
C3/B854:    A80055BF    ; しのびあし
C3/B858:    A30077BF    ; ねる
C3/B85C:    A70095BF    ; おおごえ
C3/B860:    AA0066C0    ; あなほり
C3/B864:    9F0044C3    ; インパス
C3/B868:    A6001BC7    ; レミラーマ
C3/B86C:    AB0064C7    ; おもいだす
C3/B870:    AD0079C7    ; もっとおもいだす
C3/B874:    AC008EC7    ; ふかくおもいだす
C3/B878:    AE00A3C7    ; わすれる
</programlisting>
</section> <!-- dq6.spell_commands.C3B814 -->

<section id="dq6.spell_commands.desc">
<title>解析</title>
<para>
以下、各呪文の処理を簡単に説明していく。
その前に、実際にはハンドラーごとにコード化されているものの、
各呪文に共通して見られる仕様傾向を列挙しておく。
これらの事実についてはいちいち個々の呪文解説の項では、例外的な扱いがある場合を除き繰り返さない。

<itemizedlist>
  <listitem>
    <simpara>サブルーチン <varname>$C3B8C5</varname> 呼び出しにより、特定の効果音 (ID: <literal>#$00B0</literal>) を鳴らす。</simpara>
  </listitem>
  <listitem>
    <simpara>途中でキャンセルしたり、呪文の効果が無効であったりすると、呪文選択時に消費した MP を返還する。</simpara>
  </listitem>
  <listitem>
    <simpara>コマンドの対象がパーティーメンバーの一人となるものについては、それをウィンドウ <literal>#$00CA</literal> で決定する。</simpara>
  </listitem>
</itemizedlist>
</para>

<section id="dq6.spell_commands.desc.C3B9A8">
<title>ホイミ・べホイミ・ベホマ</title>
<para>
ホイミ・べホイミ・ベホマの各コマンドは開始直後に同一の処理 <varname>$C3B9A8</varname> に合流するので、まとめて解説する。
</para>
<para>
これらの呪文は、対象者一人が死んでいなければ、そのメンバーの HP をある量だけ回復しようとするものだ。
ここで、ある量とは指定する範囲にある数からランダムに選ぶものであり、
ホイミ系 5 種の呪文に対する回復量テーブルは <varname>$C3B963</varname> において次のように定められている。
<programlisting>
C3/B963:    30001E002800 ; ホイミ
C3/B969:    33004B005F00 ; べホイミ
C3/B96F:    3600E703E703 ; べホマ
C3/B975:    390064007800 ; べホマラー
C3/B97B:    3A00E703E703 ; べホマズン
</programlisting>

十六進数を十進数で書き直し、表にまとめると次のようになる：
  <table id="table.dq6.C3B963" class="lighttable">
    <caption>$C3B963 ホイミ系回復量テーブル</caption>
    <thead>
      <tr><th>コマンド</th><th>下限値</th><th>上限値</th></tr>
    </thead>
    <tbody>
      <tr><td>ホイミ    </td><td align="right"> 30</td><td align="right"> 40</td></tr>
      <tr><td>べホイミ  </td><td align="right"> 75</td><td align="right"> 95</td></tr>
      <tr><td>べホマ    </td><td align="right">999</td><td align="right">999</td></tr>
      <tr><td>べホマラー</td><td align="right">100</td><td align="right">120</td></tr>
      <tr><td>べホマズン</td><td align="right">999</td><td align="right">999</td></tr>
    </tbody>
  </table>
</para>
<para>
乱数の適用は、ホイミ系専用サブルーチン <varname>$C3B8FC</varname> で行う。
具体的には、汎用乱数系サブルーチン <varname>$C00F28</varname> を利用して回復量を決める。
つまり、ゼロから回復量範囲の長さまでのいずれかの数をランダムに発生させ、
これに下限値を加えた値を回復量とする。
</para>
<para>
指定メンバーへの HP の回復処理自体はキャラクターのプロパティー設定サブルーチンの一種である
<varname>$C44685</varname>で行う。
回復量が過剰な場合はそこで対処することを期待する。
</para>
<para>
最後に効果音 <literal>#$00CD</literal> を鳴らし、メッセージを表示して終了する。
</para>
</section> <!-- dq6.spell_commands.desc.C3B9A8 -->

<section id="dq6.spell_commands.desc.C3BA5B">
<title>べホマラー・べホマズン</title>
<para>
べホマラー・べホマズンの各コマンドは開始直後に同一の処理 <varname>$C3BA5B</varname> に合流するので、まとめて解説する。
</para>
<para>
これらの呪文は、パーティーにいるメンバーを先頭から順番に、HP をある量だけ回復しようとするものだ。
ただし、死んでいるメンバーは単にスキップする。
また、回復量をメンバーごとに <xref linkend="dq6.spell_commands.desc.C3B9A8"/> のようにしてランダムに決定する。
回復処理、効果音、メッセージについても同様だが、呪文を受けたメンバーごとに発生する。
</para>
<para>
全員の回復メッセージを表示し終えた後、パーティーの HP/MP ウィンドウを表示してコマンドを終了する。
</para>
</section> <!-- dq6.spell_commands.desc.C3BA5B -->

<section id="dq6.spell_commands.desc.C3BAD1">
<title>キアリー</title>
<para>
キアリーは、対象者一人が死んでいなければ、その毒状態をクリアするコマンドだ。
</para>
<para>
サブルーチン <varname>$C44CA3</varname> により、指定メンバーの状態をテストする。
「しに」状態ならばいつものようにキャンセル扱いとする。
そうでなければ、指定メンバーの「もうどく」「どく」フラグがセットされているかをテストする。
これらのフラグのどちらもセットされていないならば、「しかし 何も おこらなかった」を表示して終了する。
この場合には MP の返還は発生しない。
</para>
<para>
対象が本当に毒に冒されている場合には、
キャラクターのプロパティー設定サブルーチンの一種であるサブルーチン
<varname>$C44E2B</varname> により「もうどく」「どく」フラグをリセットする。
</para>
<para>
最後にメッセージ <literal>#$16A9</literal> を表示し、コマンドを終了する。
</para>
</section> <!-- dq6.spell_commands.desc.C3BAD1 -->

<section id="dq6.spell_commands.desc.C3BB4A">
<title>ザオラル</title>
<para>
ザオラルは対象者一人が死んでいれば、半分の確率で生き返らせ、HP を最大値の半分とするコマンドだ。
</para>
<para>
サブルーチン <varname>$C44CA3</varname> により、指定メンバーの状態をテストする。
「しに」状態でなければいつものようにキャンセル扱いとする。
</para>
<para>
死んでいる場合にはサブルーチン <varname>$C00E97</varname> により乱数を発生させる。
この値が奇数ならば（最下位ビットを調べる）、ザオラルの結果を失敗とする。
メッセージ <literal>#$16A8</literal> を表示し、当然ながら MP を返還せずに終了とする。
</para>
<para>
乱数が偶数ならば成功とする。この場合、次の一連の処理を行う：
  <itemizedlist>
    <listitem>
      <simpara>サブルーチン <varname>$C44D34</varname> でメンバーの状態をすべてクリアする。</simpara>
    </listitem>
    <listitem>
      <simpara>サブルーチン <varname>$C44729</varname> でメンバーの最大 HP を取得する。
      次に LSR 命令でその半分の値を計算する。</simpara>
    </listitem>
    <listitem>
      <simpara>サブルーチン <varname>$C44685</varname> でメンバーの HP を回復する。</simpara>
    </listitem>
  </itemizedlist>
</para>
<para>
最後にメッセージ <literal>#$16A7</literal> を表示し、コマンドを終了する。
</para>
</section> <!-- dq6.spell_commands.desc.C3BB4A -->

<section id="dq6.spell_commands.desc.C3BBF8">
<title>ザオリク</title>
<para>
ザオリクは対象者一人が死んでいれば、HP ごと完全回復するコマンドだ。
処理内容は <xref linkend="dq6.spell_commands.desc.C3BB4A" /> で説明したものから、
乱数関連と半減関連を取り除いたものになる。
</para>
</section> <!-- dq6.spell_commands.desc.C3BBF8 -->

<section id="dq6.spell_commands.desc.C3BC70">
<title>ルーラ</title>
<para>
ルーラはパーティーが訪問したことがある場所の一定の集合から一点を選択し、そこへ一瞬で移動するコマンドだ。
次のような処理になっている：

  <itemizedlist>
    <listitem>
      <simpara>
      サブルーチン <varname>$C435B3</varname> を呼び出す。
      これにより、パーティーが一度訪問したすべての移動先候補地点をアドレス <varname>$7E48D8</varname> に配列としてセットする。
      </simpara>
      <simpara>
      なお、訪問情報は <varname>$7E3E60</varname> にビット列として保持されている。
      また、すべての移動先候補地点は <varname>$C8A162</varname> に 1 バイト型の配列として定義されている。
      </simpara>
    </listitem>
    <listitem>
      <simpara>
      次に配列 <varname>$7E48D8</varname> に要素があれば、そこから移動先候補をいくつか取り除く。
      サブルーチン <varname>$C7CAD5</varname> を実行することで、
      パーティーが現在いるフィールド区分（フィールド、したフィールド、かいてい、はざま）に一致しない候補を検索し、取り除く。
      この結果、移動先候補が全くなくなればメッセージ <literal>#$16D8</literal> を表示して、
      コマンドをキャンセル扱いで終了する。
      </simpara>
    </listitem>
    <listitem>
      <simpara>
        ルーラウィンドウを表示する。
        候補先の個数に応じてウィンドウの ID を <literal>#$004E</literal> か <literal>#$004F</literal> に使い分ける。
      </simpara>
    </listitem>
    <listitem>
      <simpara>
        呪文効果音を鳴らしたら、サブルーチン <varname>$C7C650</varname> を実行する。
        このとき、次に述べるような失敗パターンがあり、いずれもコマンドキャンセル扱いとなる。
      </simpara>
      <itemizedlist>
        <listitem>
          <simpara>
            天井に頭をぶつけるパターン。
            この場合はメッセージ <literal>#$16AC</literal> を表示する。
          </simpara>
        </listitem>
        <listitem>
          <simpara>
            不思議なちからで失敗するパターン。
            この場合はメッセージ <literal>#$16D8</literal> を表示する。
          </simpara>
        </listitem>
        <listitem>
          <simpara>
            特定の状況かつ特定の行き先について、パーティーにチャモロがいない（しに状態である）ために失敗するパターン。
            この場合はメッセージ <literal>#$16AD</literal> を表示する。
          </simpara>
        </listitem>
      </itemizedlist>
    </listitem>
    <listitem>
      <simpara>
        以上をすべてクリアすれば画面を切り替えてコマンドを終了する。
      </simpara>
    </listitem>
  </itemizedlist>
</para>
</section> <!-- dq6.spell_commands.desc.C3BC70 -->

<section id="dq6.spell_commands.desc.C3BD4A">
<title>リレミト</title>
<para>
リレミトは現在パーティーがいる地域から「脱出」するコマンドだ。
次のように処理する：

  <itemizedlist>
    <listitem>
      <simpara>サブルーチン <varname>$C7C783</varname> を呼び出すことで、
      パーティーが現在いる地域や状況がリレミトを許可するかどうかを調べる。
      リレミトが意味のない場所ならばメッセージ <literal>#$16D6</literal> を、
      何らかのイベント中であるなどの理由により禁止されているならばメッセージ
      <literal>#$16D8</literal> を、それぞれ表示してコマンドを終了する。
      この場合、消費済みの MP を呪文を唱えたメンバーに返還する。
      </simpara>

      <simpara>サブルーチン <varname>$C7C783</varname> のチェック内容は次のようなものだ：</simpara>
      <itemizedlist>
        <listitem>
          <simpara><code>$7E5EE1 != #$0000</code> であるか。
          ゼロでなければ、リレミトにより「何も起こらない」場である。
          <link linkend="dq6.debug.menu.C906CF">いんちきリレミト</link>すら認めない場ということだ。
          </simpara>
        </listitem>
        <listitem>
          <simpara>現在「不思議なちから」が作用する場にいるか、
          または <code>$7E3E28 &amp; #$0001</code> がセットされているかを調べる。
          どちらかならば、リレミトに「不思議なちから」が作用する。
          </simpara>
        </listitem>
        <listitem>
          <simpara><code>$7E3D2B &amp; #$0002</code> がセットされているか。
          セットされていればリレミトが発動する。
          </simpara>
        </listitem>
      </itemizedlist>

      <simpara>これらを全てクリアすればリレミトが発動する。</simpara>
    </listitem>
    <listitem>
      <simpara>許可されているならば、サブルーチン <varname>$C7C9CE</varname> を実行する。
      これがリレミトの本体処理だ。</simpara>
    </listitem>
  </itemizedlist>

リレミトが成功する条件が思いのほか複雑であることがわかる。
</para>
</section> <!-- dq6.spell_commands.desc.C3BD4A -->

<section id="dq6.spell_commands.desc.C3BDA6">
<title>くちぶえ</title>
<para>
くちぶえは現在パーティーがいる戦闘地域に基いて、強制的に通常戦闘を引き起こすコマンドだ。
次のように処理する：

  <itemizedlist>
    <listitem>
      <simpara>サブルーチン <varname>$C79447</varname> を呼び出し、
      適切なタイルせんとう ID を取得する。
      <xref linkend="dq6.debug.menu.C9086A" />で既定値として表示される値とこの ID は同じだ。
      この値がゼロだと、メッセージ「しかし 何も おこらなかった」を出力してコマンドを終了する。</simpara>
    </listitem>
    <listitem>
      <simpara>現在、通常戦闘が発生してよい状況なのかどうかをフラグ
      <code>$7E3D2A &amp; #$0010</code> をテストすることで確認する。
      なお、このフラグは <xref linkend="dq6.debug.menu.C908E9" />メニューにある「エンカウント」の操作対象そのものだ。
      フラグがリセットされていると、メッセージ「しかし 何も おこらなかった」を出力してコマンドを終了する。</simpara>
    </listitem>
    <listitem>
      <simpara>フラグがセットされていれば、戦闘開始サブルーチン <varname>$C7952C</varname> を呼び出す。</simpara>
    </listitem>
  </itemizedlist>

全くの個人的な感想だが、フラグのテストを ID 取得より先に処理して欲しい。
</para>
</section> <!-- dq6.spell_commands.desc.C3BDA6 -->

<section id="dq6.spell_commands.desc.C3BDDE">
<title>トヘロス</title>
<para>
トヘロスは次の処理を行うコマンドだ：

  <itemizedlist>
    <listitem>
      <simpara>トヘロス系カウンター <varname>$7E3BA9</varname> をリセットする。</simpara>
    </listitem>
    <listitem>
      <simpara>トヘロスフラグ <code>$7E3D2B &amp; #$0004</code> をセットする。</simpara>
    </listitem>
    <listitem>
      <simpara>せいすいフラグ <code>$7E3D2B &amp; #$0010</code> をリセットする。</simpara>
    </listitem>
  </itemizedlist>

最後にメッセージ <literal>#$16B6</literal> を表示し、コマンドを終了する。
</para>
</section> <!-- dq6.spell_commands.desc.C3BDDE -->

<section id="dq6.spell_commands.desc.C3BE10">
<title>トラマナ</title>
<para>
トラマナはトラマナフラグ <code>$7E3D2B &amp; #$0020</code> をセットするコマンドだ。
実装はここというよりはサブルーチン <varname>$C7CC5C</varname> の呼び出しで済ませている。
</para>
</section> <!-- dq6.spell_commands.desc.C3BE10 -->

<section id="dq6.spell_commands.desc.C3BE24">
<title>フローミ</title>
<para>
フローミはパーティーが現在いる場所のメッセージを表示するコマンドだ。
次のように処理する：

  <itemizedlist>
    <listitem>
      <simpara>サブルーチン <varname>$C7CAFA</varname> を呼び出し、
      フローミ名とフローミ階数を得る。
      このフローミ階数がゼロだと、呪文に意味がない旨を示すメッセージ
      (ID <literal>#$16C5</literal>) を表示してコマンドを終了する。
      この場合 MP の返還処理はない。</simpara>
    </listitem>
    <listitem>
      <simpara>フローミ階数の符号により、表示メッセージを若干変える。
      正数の場合は単に ID <literal>#$16C3</literal> のメッセージを出力する。
      負数の場合はいわゆる二の補数で表現された値の絶対値を計算してから
      ID <literal>#$16C4</literal> のメッセージを出力する。
      </simpara>
<programlisting>
C3/BE59:    49FFFF      EOR #$FFFF          <co id="dq6.spell_comannds.desc.C3BE24.co.1" />
C3/BE5C:    1A          INC A               <co id="dq6.spell_comannds.desc.C3BE24.co.2" />
C3/BE5D:    8D2E5A      STA $5A2E           <co id="dq6.spell_comannds.desc.C3BE24.co.3" />
C3/BE60:    AD305A      LDA $5A30           <co id="dq6.spell_comannds.desc.C3BE24.co.4" />
C3/BE63:    2900FF      AND #$FF00
C3/BE66:    8D305A      STA $5A30
C3/BE69:    22C22DC0    JSR $C02DC2         <co id="dq6.spell_comannds.desc.C3BE24.co.5" />
C3/BE6D:    C416
</programlisting>
<calloutlist>
  <callout arearefs="dq6.spell_comannds.desc.C3BE24.co.1 dq6.spell_comannds.desc.C3BE24.co.2">
    <simpara>情報処理試験の基本問題でよく見かけるように、
    負の整数はそのビットを反転させて 1 を加えれば絶対値を得る。</simpara>
  </callout>
  <callout arearefs="dq6.spell_comannds.desc.C3BE24.co.3 dq6.spell_comannds.desc.C3BE24.co.4">
    <simpara><varname>$5A2E</varname> は次のメッセージ中の [BB] に当てはめる値。
    一方 <varname>$5A30</varname> はこの場合は無視してよい。</simpara>
  </callout>
  <callout arearefs="dq6.spell_comannds.desc.C3BE24.co.5">
    <simpara>メッセージ <literal>#$16C4</literal>: ここは [B2]の[AD]地下[BB]階のようだ。</simpara>
  </callout>
</calloutlist>
    </listitem>
  </itemizedlist>

どちらかのメッセージを出力した後、コマンドを終了する。
</para>
</section> <!-- dq6.spell_commands.desc.C3BE24 -->

<section id="dq6.spell_commands.desc.C3BE7F">
<title>タカのめ</title>
<para>
タカのめは近くにある城や街等の現在パーティーがいる地点からの相対的な位置を調べるコマンドだ。
探索処理をサブルーチン <varname>$C7CB22</varname> で、
データ処理とメッセージ処理を当ハンドラー内でそれぞれ実行する。
当ハンドラーでの手続きはこのようなものだ：

<itemizedlist>
  <listitem>
    <simpara>
      サブルーチン <varname>$C7CB22</varname> を呼び出し、探索処理を実行する。
      これにより位置データを変数 <varname>$7E6C[D1:D8]</varname> にセットする。
    </simpara>
    <simpara>
      この結果 <varname>$6CD3</varname> と <varname>$6CD1</varname> の両方がゼロだと、
      失敗メッセージ <literal>#16C0</literal> を出力してコマンドを終了する。
      前者が南北方向の歩数で、後者が東西方向の歩数を表す。
    </simpara>
  </listitem>
  <listitem>
    <simpara>
      メッセージ中の東西何歩なのかを決めるために <varname>$7E6CD5</varname> の符号を調べる。
      正ならば東に何歩とのメッセージ <literal>#16BC</literal> を、
      負ならば西に何歩とのメッセージ <literal>#16BD</literal> をそれぞれ出力する。
    </simpara>
  </listitem>
  <listitem>
    <simpara>
      メッセージ中の南北何歩なのかを決めるために <varname>$7E6CD7</varname> の符号を調べる。
      正ならば南に何歩とのメッセージ <literal>#16BF</literal> を、
      負ならば北に何歩とのメッセージ <literal>#16BE</literal> をそれぞれ出力する。
    </simpara>
  </listitem>
  <listitem>
    <simpara>
      コマンドを終了する。
    </simpara>
  </listitem>
</itemizedlist>
</para>
<para>
本質的な処理はサブルーチン <varname>$C7CB22</varname> 以下のコードによる。

<itemizedlist>
  <listitem>
    <simpara>
      パーティーがタカのめにとっての有効地域にいるかどうかは
      構造体 <varname>$C8A188</varname> のメンバーを調べることによる。
      余談だが、この構造体配列を精査すれば、タカのめが有効な地域は「フィールド」および「したフィールド」しかないことが判明する。
    </simpara>
  </listitem>
  <listitem>
    <simpara>
      長さが 160 の二つの配列 <varname>$7E5F19</varname> と <varname>$7E5FB9</varname> を並行して調べる。
      興味がある値とは、前者の値の最下位ビットが立っていて、かつ後者の要素が 3 または 4 となる
      添字だ。
      この添字に対応する配列
      <varname>$7E62D9</varname>,
      <varname>$7E6199</varname>,
      <varname>$7E6379</varname>,
      <varname>$7E6239</varname> の要素も利用する。
    </simpara>
  </listitem>
  <listitem>
    <simpara>
      アルゴリズムはパーティーのいる地点との Manhattan 距離が最小をとる候補地点を一つ検索する。
    </simpara>
  </listitem>
  <listitem>
    <simpara>
      候補地点が基準点から東西方向に <literal>#$0012</literal> 以上離れているか、
      あるいは南北方向に <literal>#$000E</literal> 以上離れているならば、
      その候補地点はタカのめの解から除外する。
    </simpara>
  </listitem>
</itemizedlist>
</para>
</section> <!-- dq6.spell_commands.desc.C3BE7F -->

<section id="dq6.spell_commands.desc.C3BEF9">
<title>とうぞくのはな</title>
<para>
とうぞくのはなは現在パーティーがいる階や部屋に「しらべる」で入手できるお宝やゴールドがどれだけあるかを知るコマンドだ。
次のような手続きを行う：

<itemizedlist>
  <listitem>
    <simpara>
      現在パーティーがいる階や部屋がフィールド系であるかどうかを調べる。
      フィールド系だとメッセージ「しかし 何も おこらなかった」を出力してコマンドを終了する。
      余談だが、このチェックでははざまの世界後半部フィールドを漏らしている。
    </simpara>
  </listitem>
  <listitem>
    <simpara>
      サブルーチン <varname>$C7CC26</varname> を呼び出し、探索処理を実行する。
    </simpara>
  </listitem>
  <listitem>
    <simpara>
      戻り値によって出力メッセージを使い分ける。
      値がゼロならばメッセージ <literal>#$16C7</literal> を、
      そうでなければメッセージ <literal>#$16C6</literal> をそれぞれ表示して、
      コマンドを終了する。
    </simpara>
  </listitem>
</itemizedlist>
</para>
<para>
とうぞくのはなの本質的な処理はサブルーチン <varname>$C7CC26</varname> 以下になる。
手続きの概要のみ記す：

<itemizedlist>
  <listitem>
    <simpara>
      お宝カウンターは <varname>$7E679D</varname> だ。
    </simpara>
  </listitem>
  <listitem>
    <simpara>
      検索対象は三つ組の配列 <varname>$7E641D</varname>,
      <varname>$7E65DD</varname>, <varname>$7E661D</varname> となる。
    </simpara>
    <simpara>
      配列 <varname>$7E641D</varname> はマップ内のマスが「しらべる」コマンドの対象であるかを
      管理するようだ。上位 2 ビットの状態によりスキップするかどうかを決める。
      このうち <literal>#$4000</literal> のビットのほうがこのコマンド専用のデータ扱いになっている。
    </simpara>
    <simpara>
      配列 <varname>$7E65DD</varname> で「しらべる」コマンドによる反応対象の種別を管理している。
      値については下記の表を参照。この値によってサブルーチンを呼び分ける。
    </simpara>
    <simpara>
      配列 <varname>$7E661D</varname> ではマップ内の各マスに対応する
      各種お宝構造体配列の添字、
      すなわち「しらべる」イベントの ID を管理している。
    </simpara>
  </listitem>
  <listitem>
    <simpara>
      基本的には「しらべる」コマンドで得られる対象物は、
      一度アクセスしたら二度目以降は反応しない。そのフラグを管理するのは配列
      <varname>$7E3D2A</varname> のビットセットだ。
      一度「しらべる」コマンドで入手した項目に対応するビットは 1 になっている。
      このアルゴリズムで調べたいのは、そのようなビットが 0 になっているものの個数だ。
    </simpara>
  </listitem>
</itemizedlist>
</para>
<table id="table.dq6.look.kind" class="lighttable">
  <caption>しらべる反応種別</caption>
  <thead>
    <tr><th>値</th><th>種別</th><th>参照構造体</th></tr>
  </thead>
  <tbody>
    <tr><td>0</td><td>どうぐ</td><td><varname>$C83E5C</varname></td></tr>
    <tr><td>1</td><td>ゴールド</td><td><varname>$C8477E</varname></td></tr>
    <tr><td>2</td><td>立て札・貼り紙・本棚</td><td>n/a</td></tr>
    <tr><td>3</td><td>罠モンスター</td><td><varname>$C85534</varname></td></tr>
    <tr><td>4</td><td>（不明）</td><td><varname>$C855AB</varname></td></tr>
  </tbody>
</table>
</section> <!-- dq6.spell_commands.desc.C3BEF9 -->

<section id="dq6.spell_commands.desc.C3BF55">
<title>しのびあし</title>
<para>
しのびあしは次の処理を行うコマンドだ：

  <itemizedlist>
    <listitem>
      <simpara>しのびあし歩数 <varname>$7E3BAD</varname> をリセットする。</simpara>
    </listitem>
    <listitem>
      <simpara>しのびあしフラグ <code>$7E3D2B &amp; #$0008</code> をセットする。</simpara>
    </listitem>
  </itemizedlist>

最後にメッセージ <literal>#$16B6</literal> を表示し、コマンドを終了する。
</para>
</section> <!-- dq6.spell_commands.desc.C3BF55 -->

<section id="dq6.spell_commands.desc.C3BF77">
<title>ねる</title>
<para>
ねるは本人の状態をサブルーチン <varname>$C44F0D</varname> 呼び出しによってねむり状態にするコマンドだ。
</para>
</section> <!-- dq6.spell_commands.desc.C3BF77 -->

<section id="dq6.spell_commands.desc.C3BF95">
<title>おおごえ</title>
<para>
おおごえは旅の店屋を呼びつけて営業をさせるコマンドだ。次のようなことを行う：

  <itemizedlist>
    <listitem>
      <simpara>トヘロス・せいすい歩数 <varname>$7E3BA9</varname> をリセットする。</simpara>
    </listitem>
    <listitem>
      <simpara>サブルーチン <varname>$C7CC76</varname> を呼び出し、現在おおごえを利用可能かどうかを調べる。
      無効な場合にはメッセージ <literal>#$16D5</literal> を表示してコマンドを終了する。
      </simpara>
    </listitem>
    <listitem>
      <simpara>おおごえフラグ <code>$7E3D2B &amp; #$0040</code> をセットする。</simpara>
    </listitem>
    <listitem>
      <simpara>最近訪問した店と同じ品揃えの旅の店屋、
      ある旅の宿屋、または旅の神父がそれぞれ確率 1/3 で現れる。</simpara>

      <itemizedlist>
        <listitem>
          <simpara>店屋の場合には <varname>$7E3B77</varname> に格納済みの店屋 ID を参照する。
          店の種別に合わせて出力メッセージ用に誰が現れるのかを決め、
          <xref linkend="dq6.shop.hack.C5F5BE" /> を実行する。</simpara>
        </listitem>
        <listitem>
          <simpara>宿屋の場合には ID <literal>#$0024</literal> の宿屋が現れる。
          それから <xref linkend="dq6.inn.behavior"/> で述べるサブルーチンを実行する。
          宿賃は一人 100 ゴールドだ。</simpara>
        </listitem>
        <listitem>
          <simpara>教会の場合には ID <literal>#$0006</literal> の教会が現れる。
          つまり「おいのりをする」がない教会だ。
          それから <xref linkend="dq6.church.behavior.C3D3E3"/> で述べるサブルーチンを実行する。
          </simpara>
        </listitem>
      </itemizedlist>
    </listitem>
    <listitem>
      <simpara>おおごえフラグ <code>$7E3D2B &amp; #$0040</code> をリセットする。</simpara>
    </listitem>
  </itemizedlist>

フラグをリセットしたら、コマンドを終了する。
</para>
</section> <!-- dq6.spell_commands.desc.C3BF95 -->

<section id="dq6.spell_commands.desc.C3C066">
<title>あなほり</title>
<para>
あなほりは物品またはゴールドをランダムに入手するコマンドだ。
できればアクティビティー図でも描いて展望を明瞭にしておきたいところだが、文章でコマンドの手続きを示す：

<itemizedlist>
  <listitem>
    <simpara>
      サブルーチン <varname>$C7CC3A</varname> を実行し、あなほりが利用可能な状況かどうかを判定する。
      単に変数 <varname>$7E85EF</varname> がゼロであるかをテストするだけだ。
      ゼロでなければメッセージ <literal>#$16D3</literal> を表示してコマンドを終了する。
    </simpara>
  </listitem>
  <listitem>
    <simpara>
      あなほりカウンターを参照する。変数 <varname>$7E5ED3</varname> がそれだが、
      この値が 5 以上ならばメッセージ <literal>#$16D2</literal> を表示してコマンドを終了する。
    </simpara>
  </listitem>
  <listitem>
    <simpara>
      確率 1/2 でスカかどうかを抽選する。
      スカならばメッセージ <literal>#$16D2</literal> を表示してコマンドを終了する。
    </simpara>
  </listitem>
  <listitem>
    <simpara>
      確率 1/2 でアイテム抽選を行うかどうかを補助サブルーチンの呼び出しにより抽選する。
      この抽選処理の概要は後述する。
    </simpara>
    <itemizedlist>
      <listitem>
        <simpara>
          当選すれば、サブルーチン <varname>$C3ED1D</varname> を実行して獲得した物品をパーティーの所持品の空きまたはふくろに追加する。
        </simpara>
      </listitem>
      <listitem>
        <simpara>
          発見メッセージ <literal>#$16D1</literal> を出力する。
        </simpara>
      </listitem>
      <listitem>
        <simpara>
          サウンド <literal>#$002C</literal> を鳴らし、演奏終了を待機する。
        </simpara>
      </listitem>
      <listitem>
        <simpara>
          補助サブルーチンを呼び出して、あなほりカウンター <varname>$7E5ED3</varname> を 1 だけ加える。
          そこでは値が 5 を超えるようならば 5 のまま保留する。
        </simpara>
       </listitem>
     </itemizedlist>
  </listitem>
  <listitem>
    <simpara>
      アイテム抽選に漏れた場合は確率 1/128 で所持金の半額を掘り当てる。
    </simpara>
    <itemizedlist>
      <listitem>
        <simpara>
          当選すれば、サブルーチン <varname>$C427E0</varname> を呼び出してパーティーの所持金を問い合わせる。
          次に LSR 命令と ROR 命令を併用して半額を計算し、これを収入額とする。
        </simpara>
      </listitem>
      <listitem>
        <simpara>
          落選すればランダムに 1 または 2 ゴールドを収入額とする。
        </simpara>
      </listitem>
    </itemizedlist>
    <simpara>
      最後にサブルーチン <varname>$C42862</varname> を呼び出して所持金に収入額を加算し、
      メッセージ <literal>#$16D0</literal> を表示する。
    </simpara>
  </listitem>
  <listitem>
    <simpara>
      前述のあなほりカウンター補助サブルーチンを呼び出して、あなほりカウンターを更新する。
    </simpara>
  </listitem>
</itemizedlist>

以上でコマンドを終了する。
</para>

<para>
次にアイテム抽選を行うかを決定する補助サブルーチンの処理を示す：

<itemizedlist>
  <listitem>
    <simpara>
      パーティーがいる地域のタイルせんとうデータを参照する。
    </simpara>
    <simpara>
      <link linkend="dq6.encounter.model.C6843C">タイルせんとうデータ</link>内のモンスター抽選属性値の総和を計算する。
      この和がゼロならば、アイテム抽選を行わないものとする。
    </simpara>
    <simpara>
      ゼロからこの和までの間の数をランダムに一つ取る。
    </simpara>
    <simpara>
      この乱数から、タイルせんとうデータ内の謎の重みメンバーデータを一つずつ順に減算する。
      この値が負になるところで反復処理を中断するが、
      最後まで行っても負にならない場合は、アイテム抽選を行わないものとする。
    </simpara>
    <simpara>
      反復処理中断時のインデックスを基に、タイルせんとうデータ中のモンスターを決定する。
      モンスターの ID がゼロならば、アイテム抽選を行わないものとする。
    </simpara>
    <simpara>
      このモンスターの宝箱を落とす確率を<link linkend="dq6.monster.C20154">モンスターデータ</link>の対応属性に基いて決定する。
      確率表は <varname>$C2B1C3</varname> のものを参照する。
      それから当選確率がこの値であるような抽選をする。
    </simpara>
    <simpara>
      このモンスターの宝箱が元々設定されていないならば、アイテム抽選を行わなかったものとする。
    </simpara>
    <simpara>
      変数 <varname>$7E5A2A</varname> に宝箱の中身のアイテム ID をセットして、
      この補助サブルーチンを終了する。
    </simpara>
  </listitem>
</itemizedlist>
</para>
<table id="table.dq6.C2B1C3" class="lighttable">
  <caption>$C2B1C3 モンスター宝箱確率</caption>
  <thead>
    <tr><th>ID</th><th>値</th><th>確率</th></tr>
  </thead>
  <tbody>
    <tr><td>0</td><td><literal>#$0000</literal></td><td align="right">1/1</td></tr>
    <tr><td>1</td><td><literal>#$0007</literal></td><td align="right">1/8</td></tr>
    <tr><td>2</td><td><literal>#$000F</literal></td><td align="right">1/16</td></tr>
    <tr><td>3</td><td><literal>#$001F</literal></td><td align="right">1/32</td></tr>
    <tr><td>4</td><td><literal>#$003F</literal></td><td align="right">1/64</td></tr>
    <tr><td>5</td><td><literal>#$007F</literal></td><td align="right">1/128</td></tr>
    <tr><td>6</td><td><literal>#$00FF</literal></td><td align="right">1/256</td></tr>
    <tr><td>7</td><td><literal>#$0FFF</literal></td><td align="right">1/4096</td></tr>
  </tbody>
</table>
<para>
補足だが、処理中に乱数取得処理がいくつかあるが、そのほとんどはサブルーチン
<varname>$C00F28</varname> だが、アイテム確率だけは分母が大きいのでサブルーチン
<varname>$C00F49</varname> を採用している。
</para>
</section> <!-- dq6.spell_commands.desc.C3C066 -->

<section id="dq6.spell_commands.desc.C3C344">
<title>インパス</title>
<para>
インパスは次のような三段構造のコマンドだ：

<itemizedlist>
  <listitem>
    <simpara>「まじゅつしのとう」入場に関する処理</simpara>
  </listitem>
  <listitem>
    <simpara>宝箱またはツボの中身を判定する処理</simpara>
  </listitem>
  <listitem>
    <simpara>所持品を一つ鑑定する処理</simpara>
  </listitem>
</itemizedlist>
</para>

<para>
「まじゅつしのとう」入場に関する処理はサブルーチン
<varname>$C7CC8E</varname> 以下に実装されており、その内容とは次のようなものだ：

<itemizedlist>
  <listitem>
    <simpara>
      現在パーティーがいるのが「まじゅつしのとう」玄関外部 (ID: <literal>#$024D</literal>) でなければ抜ける。
    </simpara>
  </listitem>
  <listitem>
    <simpara>
      パーティーの先頭メンバーが入口の扉の前面に、扉の方を向いているかどうかを調べ、
      かつ扉がまだ閉まっているかどうかを調べる。いずれかの条件が成り立っていなければ抜ける。
    </simpara>
  </listitem>
  <listitem>
    <simpara>
      この扉を開く。
    </simpara>
  </listitem>
  <listitem>
    <simpara>
      <link linkend="dq6.spell_commands.desc.C3BC70">ルーラフラグ列</link>内「まじゅつしのとう」のビットをセットする。
      これにはサブルーチン <varname>$C6DE8A</varname> を呼び出すことで達成する。
    </simpara>
  </listitem>
</itemizedlist>

この扉を開ける処理がなされると、インパスのコマンド処理が終了する。
そうでなければ、以下の処理へ進む。
</para>

<para>
宝箱またはツボの中身を判定する処理はサブルーチン
<varname>$C7CCEF</varname> 以下で実装されている。次のようになっている：

<itemizedlist>
  <listitem>
    <simpara>
      パーティーの先頭メンバーの正面に宝箱またはツボが置いてあるかどうかを調べる。
      具体的には、その対象に対応する「しらべる」メッセージ構造体配列の添字の値を見て、
      それが宝箱なのかツボなのかを判定する。
      対象が宝箱とツボのいずれでもなければ抜ける。
    </simpara>
  </listitem>
  <listitem>
    <simpara>
      とうぞくのはなやレミラーマの要領で、対象の中身が収拾済みかどうかを確認する。
      また、中身が未回収ならばアイテム、ゴールド、罠の種別に応じて色を決める。
    </simpara>
  </listitem>
</itemizedlist>

このサブルーチン呼び出しにより、インパスが宝箱またはツボに反応する可能性があるかどうかがわかる。
コマンドハンドラー側ではこの戻り値によって、選択ウィンドウ「たからばこ アイテム」や
「ツボ アイテム」ウィンドウを表示するかどうかを決める。

<itemizedlist>
  <listitem>
    <simpara>
      ここでキャンセルされた場合は、コマンド自体をキャンセル扱いで終了する。
    </simpara>
  </listitem>
  <listitem>
    <simpara>
      プレイヤーが「たからばこ」と「ツボ」のどちらかを選択すると、下の表に示した色に応じて
      <literal>#$16AE</literal> から <literal>#$16B4</literal> のいずれかの固定メッセージを表示してコマンドを終了する。
      「アイテム」を選択すると、次に述べる鑑定処理を実行する。
    </simpara>
  </listitem>
</itemizedlist>
<table id="table.dq6.identification.colors" class="lighttable">
  <caption>インパスにおける色と内容の対応</caption>
  <thead>
    <tr><th>値</th><th>色</th><th>内容</th></tr>
  </thead>
  <tbody>
    <tr><td>0</td><td>からっぽ</td><td>回収済みにつき空</td></tr>
    <tr><td>1</td><td>青</td><td>品物</td></tr>
    <tr><td>2</td><td>黄</td><td>ゴールド</td></tr>
    <tr><td>3</td><td>赤</td><td>罠</td></tr>
  </tbody>
</table>
</para>

<para>
最後に所持品の鑑定となる：

<itemizedlist>
  <listitem>
    <simpara>
      ウィンドウ <literal>#$00CB</literal> を表示して、
      鑑定する品物を所持するパーティーメンバーまたは「ふくろ」のいずれかをプレイヤーに選択させる。
      ここでキャンセルされた場合は、再び宝箱・ツボチェックまで戻る。
    </simpara>
  </listitem>
  <listitem>
    <simpara>
      パーティーメンバーが選択されると、所持品があるのかどうかを調べる。
      何も持っていなければメッセージ <literal>#$1527</literal> を表示して
      コマンド入力を一つ戻す。
    </simpara>
    <simpara>
      道具袋が選択されると、中身が何かあるのかどうかを調べる。
      何も収納されていなければメッセージ <literal>#$1722</literal> を表示して
      コマンド入力を一つ戻す。
    </simpara>
  </listitem>
  <listitem>
    <simpara>鑑定する品物が決まったら、呪文効果音を鳴らして鑑定処理を実行する：</simpara>

    <itemizedlist>
      <listitem>
        <simpara>
          サブルーチン <varname>$C4608D</varname> により、鑑定品の道具種別情報を取得する。
        </simpara>
      </listitem>
      <listitem>
        <simpara>
          鑑定メッセージを 2, 3 表示する。
          この際にメッセージ ID を道具構造体 <varname>$C41A3D</varname> のデータから取得するが、
          種別が道具か否かで出力手続きが異なる。
          メッセージ出力が最も多くなるのは、鑑定品が装備可能品かつ
          装備していると特殊な効用があり、さらに戦闘中に使うと何か起こるものだ。
        </simpara>
      </listitem>
      <listitem>
        <simpara>
          別サブルーチン呼び出しにより鑑定品の耐久性を鑑定する。
          道具構造体 <varname>$C41A3D</varname> の関連メンバーを取得し、
          メッセージ <literal>#$163F</literal> から <literal>#$1641</literal> までのいずれかを表示する。
        </simpara>
      </listitem>
      <listitem>
        <simpara>
          装備品ならば、パーティーメンバーの誰が装備可能なのかを調べる。
          具体的にはサブルーチン <varname>$C45FA6</varname> で情報取得を、
          配列 <varname>$7E3BB6</varname> で各員の装備可能性を保持する。
        </simpara>
      </listitem>
      <listitem>
        <simpara>
          前処理に基いて装備可能者をメッセージで表示する。
          大きく分けて三通り。
          誰も装備できないならばメッセージ <literal>#$1642</literal> か <literal>#$1648</literal> を示して売値評価へ進む。
          あるいは装備可能者が 6 名以上いるか否かで、メッセージ表示が異なる。
          詳細は割愛する。
        </simpara>
      </listitem>
      <listitem>
        <simpara>
          最後に売値を評価する。
          貴重品ビットのセットされた品物ならばメッセージ <literal>#$164A</literal> を、
          そうでなければサブルーチン <varname>$C45F3C</varname> で売値を計算し、
          メッセージ <literal>#$1649</literal> で知らせる。
        </simpara>
      </listitem>
    </itemizedlist>
  </listitem>
</itemizedlist>

以上でコマンドを終了する。
</para>
</section> <!-- dq6.spell_commands.desc.C3C344 -->

<section id="dq6.spell_commands.desc.C3C71B">
<title>レミラーマ</title>
<para>
レミラーマはパーティーの近くにある怪しいものを目立たせるコマンドだ。
ハンドラーでの処理は次のようになっている：

<itemizedlist>
  <listitem>
    <simpara>
      サブルーチン <varname>$C7CCF4</varname> を呼び出して、このコマンドが利用可能であるかを問い合わせる。
      利用できなければメッセージ <literal>#$16D8</literal> を出力し、
      キャンセル扱いでコマンドを終了する。
    </simpara>
  </listitem>
  <listitem>
    <simpara>
      次にサブルーチン <varname>$C7CD10</varname> を呼び出して、怪しいものを目立たさせる。
    </simpara>
  </listitem>
</itemizedlist>
</para>
<para>
サブルーチン <varname>$C7CCF4</varname> の処理は単純で、
変数 <varname>$7E5ED1</varname> の値が <literal>#$FFFF</literal> でないことをテストするものだ。
</para>
<para>
サブルーチン <varname>$C7CD10</varname> の処理では画面内の怪しい地点を光らせて効果音を鳴らす。
具体的な内容は説明が困難なので、明らかな処理のみ記す：

<itemizedlist>
  <listitem>
    <simpara>
      <link linkend="dq6.spell_commands.desc.C3BEF9">とうぞくのはな</link>のアルゴリズムと同様にして、
      パーティーがいる地点近辺の怪しい地点を探索する。
      ただし、配列 <varname>$7E641D</varname> のテストするビットが異なる。
      レミラーマの場合は最上位ビットに加えて <literal>#$0200</literal> を見る。
    </simpara>
  </listitem>
  <listitem>
    <simpara>
      怪しい地点が光るときの効果音は <literal>#$00CD</literal> を用いる。
      これは<link linkend="dq6.spell_commands.desc.C3B9A8">ホイミ系</link>と同じ効果音だ。
    </simpara>
  </listitem>
</itemizedlist>
</para>
</section> <!-- dq6.spell_commands.desc.C3C71B -->

<section id="dq6.spell_commands.desc.C7CDAF">
<title>おもいだす・もっとおもいだす・ふかくおもいだす</title>
<para>
おもいだす・もっとおもいだす・ふかくおもいだすの各コマンドは同一の処理
<varname>$C7CDAF</varname> に合流するので、まとめて解説する。
</para>
<para>
今まで記憶したメッセージの ID は配列 <varname>$7E3EAC</varname> に最大 32 個格納されている。
これらはこのメッセージを配列の先頭から高々規定個数分を連続してウィンドウに出力するコマンド群だ。
メッセージ数の上限はコマンドによって異なり、次のようになっている：

  <table id="table.dq6.recall.limits" class="lighttable">
    <caption>おもいだす系コマンドのメッセージ数上限</caption>
    <thead>
      <tr><th>コマンド</th><th>上限</th></tr>
    </thead>
    <tbody>
      <tr><td>おもいだす      </td><td align="right"> 3</td></tr>
      <tr><td>もっとおもいだす</td><td align="right">10</td></tr>
      <tr><td>ふかくおもいだす</td><td align="right">32</td></tr>
    </tbody>
  </table>
</para>
<para>
この配列には値 <literal>#$FFFF</literal> が混入していることがある。
そのときにはこの値をスキップして次に行く（配列の末尾まで <literal>#$FFFF</literal> のはずだが）。
また、メッセージ内の米印文字は星印文字に置換して出力する。
</para>
<para>
この配列の中身 32 個が全て <literal>#$FFFF</literal> で埋まっている場合、
このコマンドはメッセージ <literal>#$16DB</literal> を表示して終了する。
</para>
<para>
プレイヤーがメッセージ出力中にキャンセルボタンを押した場合、
出力するメッセージが残っていてもコマンドを終了する。
また、配列内が事実上空のときにはメッセージ <literal>#$16DB</literal> を表示してコマンドを終了する。
</para>
</section> <!-- dq6.spell_commands.desc.C7CDAF -->

<section id="dq6.spell_commands.desc.C3C7A3">
<title>わすれる</title>
<para>
わすれるは、メッセージ配列 <varname>$7E3EAC</varname> の内容を対話的に削除するコマンドだ。
</para>
<para>
この配列の中身 32 個が全て <literal>#$FFFF</literal> で埋まっている場合、
このコマンドはメッセージ <literal>#$16DC</literal> を表示して終了する。
</para>
<para>
候補メッセージがあるならば、画面に「？つまえ」ウィンドウおよびメッセージ出力ウィンドウを表示する。
「？つまえ」ウィンドウは二種類あり、メッセージ個数が 1 ならば ID <literal>#$00A8</literal> のものを用いるが、
普通は <literal>#$00A7</literal> のものを表示する。
プレイヤーは十字キーの左右でメッセージをめくり、対象を一個決定する。
</para>
<para>
何かメッセージを決定すると、ウィンドウ <literal>#$00A6</literal>「わすれる はい・いいえ」を表示する。
プレイヤーが「はい」と答えると、サブルーチン <varname>$C6E125</varname> を呼び出すことで、
現在表示されているメッセージをメッセージ配列 <varname>$7E3EAC</varname> から取り除き、
それ以降のメッセージ ID をすべて最近覚えた方向にシフトし、
配列の末尾に <literal>#$FFFF</literal> をセットするという一連の処理を実行する。
</para>
<para>
画面に「？つまえ」ウィンドウが表示している間にプレイヤーがキャンセルボタンを押すか、
わすれるためのメッセージ配列が空になったらコマンドを終了する。
</para>
</section> <!-- dq6.spell_commands.desc.C3C7A3 -->
</section> <!-- dq6.spell_commands.desc -->
</section> <!-- dq6.spell_commands -->
