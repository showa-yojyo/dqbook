# 「ドラクエ命」ドキュメント生成用 Makefile.base-rules
#
# 同じく svnbook から拝借したものだ

# Grouping targets
all: all-html pdf ps
all-html: html html-chunk html-help
all-html-arch: html-arch html-chunk-arch
install: install-html install-html-chunk install-html-help install-pdf install-ps
install-arch: install-html-arch install-html-chunk-arch
prefab: version log install-html-chunk install-html-chunk-arch

# Build targets
$(VERSION_SOURCE): version
version:
	@if $(GITVERSION) . > /dev/null; then \
	  echo '<!ENTITY git.version "'`$(GITVERSION)`'">' \
	    > $(VERSION_SOURCE).tmp; \
	else \
	  echo '<!ENTITY git.version "">' > $(VERSION_SOURCE).tmp; \
	fi
	@echo '<!ENTITY today.date "'`LANG= date +%Y/%m/%d\ \(%a\)`'">' >> $(VERSION_SOURCE).tmp
	@echo '<!ENTITY today.year "'`LANG= date +%Y`'">' >> $(VERSION_SOURCE).tmp
	@if cmp -s $(VERSION_SOURCE) $(VERSION_SOURCE).tmp; then \
	  rm $(VERSION_SOURCE).tmp; \
	else \
	  mv $(VERSION_SOURCE).tmp $(VERSION_SOURCE); \
	fi

# <book> からは独立した HTML ファイルを作成するためのターゲット

$(LOG_TARGET): log
log:
	@touch $(LOG_TARGET)

# Rule html:

html: valid $(LOG_TARGET) $(HTML_TARGET)
$(HTML_TARGET): $(ALL_SOURCE) $(STYLESHEET) $(IMAGES)
	$(ENSURE_XSL)
	$(XSLTPROC) $(HTML_XSLTPROC_OPTS) --output $(HTML_TARGET) \
	  $(XSL_DIR)/xhtml.xsl $(XML_SOURCE)

# Rule html-chunk:
#
# The trailing slash on the xsltproc --output option is essential to
# output pages into the directory
html-chunk: valid $(LOG_TARGET) $(HTML_CHUNK_TARGET)
$(HTML_CHUNK_TARGET): $(ALL_SOURCE) $(STYLESHEET) $(IMAGES)
	$(MKDIR) $(HTML_CHUNK_DIR)
	$(IFIMAGES) $(MKDIR) $(HTML_CHUNK_DIR)/image $(ENDIF)
	$(ENSURE_XSL)
	$(XSLTPROC) $(HTML_XSLTPROC_OPTS) --output $(HTML_CHUNK_DIR)/ \
	  $(XSL_DIR)/xhtml-chunk.xsl $(XML_SOURCE)
	cp -uf $(STYLESHEET) $(HTML_CHUNK_DIR)
	$(IFIMAGES) $(INSTALL_DATA) $(IMAGES) $(HTML_CHUNK_DIR)/image $(ENDIF)
	$(IFIMAGES) $(INSTALL_DATA) $(IMAGES) $(HTML_CHUNK_DIR) $(ENDIF)

# Rule html-help:
# html-chunk とよく似ている
html-help: valid $(HTML_HELP_TARGET)
$(HTML_HELP_TARGET): $(HHP_TARGET)
	cp -uf $(STYLESHEET) $(HTML_HELP_DIR)
	$(IFIMAGES) $(INSTALL_DATA) $(IMAGES) $(HTML_HELP_DIR) $(ENDIF)
	$(RUN_HHC) $(HHP_TARGET)

$(HHP_TARGET): $(ALL_SOURCE) $(STYLESHEET) $(IMAGES)
	$(MKDIR) $(HTML_HELP_DIR)
	$(ENSURE_XSL)
	$(XSLTPROC) $(HTML_HELP_XSLTPROC_OPTS) --output $(HTML_HELP_DIR)/ \
	  $(XSL_DIR)/htmlhelp.xsl $(XML_SOURCE)

# Rule html-arch:
# 丸パクリでよかろう

html-arch: valid $(HTML_ARCH_TARGET)
$(HTML_ARCH_TARGET): $(HTML_TARGET) $(IMAGES)
	rm -rf $(HTML_ARCH_BASENAME) && \
	$(MAKE) install-html INSTALL_SUBDIR=$(HTML_ARCH_BASENAME) && \
	$(ARCH_CMD) $@ $(HTML_ARCH_BASENAME) && \
	rm -rf $(HTML_ARCH_BASENAME)

# Rule html-arch:
# 丸パクリでよかろう

html-chunk-arch: valid $(HTML_CHUNK_ARCH_TARGET)
$(HTML_CHUNK_ARCH_TARGET): $(HTML_CHUNK_TARGET) $(IMAGES)
	rm -rf $(HTML_CHUNK_ARCH_BASENAME) && \
	$(MAKE) install-html-chunk INSTALL_SUBDIR=$(HTML_CHUNK_ARCH_BASENAME) && \
	$(ARCH_CMD) $@ $(HTML_CHUNK_ARCH_BASENAME) && \
	rm -rf $(HTML_CHUNK_ARCH_BASENAME)

# Rule fo:

fo: valid $(FO_TARGET)
$(FO_TARGET): $(ALL_SOURCE) $(VERSION_SOURCE) $(IMAGES)
	$(ENSURE_XSL)
	$(XSLTPROC) $(FO_XSLTPROC_OPTS) --output $(FO_TARGET) \
	  $(XSL_DIR)/fo.xsl $(XML_SOURCE)

# Rule pdf:

pdf: $(PDF_TARGET)
$(PDF_TARGET): $(FO_TARGET) $(IMAGES)
	$(RUN_FOP) -fo $(FO_TARGET) -pdf $(PDF_TARGET) -c $(FOP_CONFIG)

# Rule ps:

ps: $(PS_TARGET)
$(PS_TARGET): $(FO_TARGET) $(IMAGES)
	$(RUN_FOP) -fo $(FO_TARGET) -ps $(PS_TARGET) -c $(FOP_CONFIG)

# Install targets
$(INSTALL_SUBDIR):
	$(MKDIR) $(INSTALL_SUBDIR)

install-html: $(HTML_TARGET) $(INSTALL_SUBDIR)
	$(IFIMAGES) $(MKDIR) $(INSTALL_SUBDIR)/image $(ENDIF)
	$(INSTALL_DATA) $(HTML_TARGET) $(INSTALL_SUBDIR)
	$(INSTALL_DATA) $(STYLESHEET) $(INSTALL_SUBDIR)
	$(IFIMAGES) $(INSTALL_DATA) $(IMAGES) $(INSTALL_SUBDIR)/image $(ENDIF)
	$(IFIMAGES) $(INSTALL_DATA) $(IMAGES) $(INSTALL_SUBDIR) $(ENDIF)

install-html-chunk: $(HTML_CHUNK_TARGET) $(INSTALL_SUBDIR)
	$(IFIMAGES) $(MKDIR) $(INSTALL_SUBDIR)/image $(ENDIF)
	$(INSTALL_DATA) $(HTML_CHUNK_DIR)/*.html $(INSTALL_SUBDIR)
	$(INSTALL_DATA) $(STYLESHEET) $(INSTALL_SUBDIR)
	$(IFIMAGES) $(INSTALL_DATA) $(IMAGES) $(INSTALL_SUBDIR)/image $(ENDIF)
	$(IFIMAGES) $(INSTALL_DATA) $(IMAGES) $(INSTALL_SUBDIR) $(ENDIF)

install-html-arch: $(HTML_ARCH_TARGET) $(INSTALL_SUBDIR)
	$(INSTALL_DATA) $(HTML_ARCH_TARGET) $(INSTALL_SUBDIR)

install-html-chunk-arch: $(HTML_CHUNK_ARCH_TARGET) $(INSTALL_SUBDIR)
	$(INSTALL_DATA) $(HTML_CHUNK_ARCH_TARGET) $(INSTALL_SUBDIR)

install-html-help: $(HTML_HELP_TARGET) $(INSTALL_SUBDIR)
	$(INSTALL_DATA) $(HTML_HELP_TARGET) $(INSTALL_SUBDIR)

install-pdf: $(PDF_TARGET) $(INSTALL_SUBDIR)
	$(INSTALL_DATA) $(PDF_TARGET) $(INSTALL_SUBDIR)

install-ps: $(PS_TARGET) $(INSTALL_SUBDIR)
	$(INSTALL_DATA) $(PS_TARGET) $(INSTALL_SUBDIR)

# Clean targets
clean: clean-html clean-arch clean-fo clean-pdf clean-ps
	rm -f $(VERSION_SOURCE)

clean-html:
	rm -f $(HTML_TARGET) $(LOG_TARGET)
	rm -rf $(HTML_CHUNK_DIR)

clean-arch:
	rm -f $(HTML_ARCH_TARGET) $(HTML_CHUNK_ARCH_TARGET)

clean-fo:
	rm -f $(FO_TARGET)

clean-pdf:
	rm -f $(PDF_TARGET)

clean-ps:
	rm -f $(PS_TARGET)

# Utility targets

# VERSION_SOURCE は $(DIR)/version.xml のことだが、
# これを Make の過程で自動生成するようだ。
valid: $(VERSION_SOURCE)
	$(XMLLINT) --noout --nonet --valid $(XML_SOURCE)
